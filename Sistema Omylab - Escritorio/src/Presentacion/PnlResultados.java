/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;


import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import Entidad.*;
import Negocios.*;
import static Presentacion.FrmPrincipal.lblApellidos;
import static Presentacion.FrmPrincipal.lblDni;
import static Presentacion.FrmPrincipal.lblNombres;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.temporal.ChronoUnit;
import java.time.temporal.Temporal;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Brian Anco
 */
public class PnlResultados extends javax.swing.JPanel {

    /**
     * Creates new form PnlOrdenes
     */
    public PnlResultados() throws ParseException {
        initComponents();
        ListarOrdenes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rSPanel1 = new necesario.RSPanel();
        jLabel1 = new javax.swing.JLabel();
        lblIdOrden = new javax.swing.JLabel();
        txtNombresCliente = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblOrdenes = new javax.swing.JTable();
        txtAnalisis = new javax.swing.JTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblAnalisis = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        btnGuardarAnalisis = new RSMaterialComponent.RSButtonMaterialIconOne();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        lblIdAnalisis = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        txtMinimoCliente = new javax.swing.JTextField();
        txtMaximoCliente = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        txtResultado = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        txtSexo = new javax.swing.JTextField();
        txtEdad = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        rSPanel1.setColorBackground(new java.awt.Color(255, 255, 255));
        rSPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(235, 73, 51));
        jLabel1.setText("GESTIONAR RESULTADOS");
        rSPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        lblIdOrden.setBackground(new java.awt.Color(0, 0, 0));
        lblIdOrden.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblIdOrden.setForeground(new java.awt.Color(255, 255, 255));
        lblIdOrden.setText("0");
        rSPanel1.add(lblIdOrden, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 400, -1, -1));

        txtNombresCliente.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtNombresCliente.setForeground(new java.awt.Color(0, 0, 0));
        txtNombresCliente.setPreferredSize(new java.awt.Dimension(150, 28));
        rSPanel1.add(txtNombresCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 420, 300, -1));

        tblOrdenes.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblOrdenes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Cliente", "Fecha", "Edad", "Sexo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblOrdenes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblOrdenesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblOrdenes);
        if (tblOrdenes.getColumnModel().getColumnCount() > 0) {
            tblOrdenes.getColumnModel().getColumn(0).setResizable(false);
            tblOrdenes.getColumnModel().getColumn(0).setPreferredWidth(20);
            tblOrdenes.getColumnModel().getColumn(1).setPreferredWidth(200);
        }

        rSPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 370, 270));

        txtAnalisis.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtAnalisis.setPreferredSize(new java.awt.Dimension(150, 28));
        rSPanel1.add(txtAnalisis, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 300, 380, -1));

        tblAnalisis.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblAnalisis.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Análisis"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAnalisis.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAnalisisMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tblAnalisis);
        if (tblAnalisis.getColumnModel().getColumnCount() > 0) {
            tblAnalisis.getColumnModel().getColumn(0).setResizable(false);
            tblAnalisis.getColumnModel().getColumn(0).setPreferredWidth(1);
            tblAnalisis.getColumnModel().getColumn(1).setResizable(false);
        }

        rSPanel1.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 130, 490, 140));

        jLabel11.setBackground(new java.awt.Color(0, 0, 0));
        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("Análisis");
        rSPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 310, -1, -1));

        jLabel14.setBackground(new java.awt.Color(0, 0, 0));
        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(237, 125, 52));
        jLabel14.setText("Lista de Órdenes");
        rSPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, -1, -1));

        jLabel15.setBackground(new java.awt.Color(0, 0, 0));
        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(237, 125, 52));
        jLabel15.setText("Análisis Realizados");
        rSPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 90, -1, -1));

        btnGuardarAnalisis.setBackground(new java.awt.Color(56, 171, 38));
        btnGuardarAnalisis.setBackgroundHover(new java.awt.Color(56, 178, 72));
        btnGuardarAnalisis.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.SAVE);
        btnGuardarAnalisis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarAnalisisActionPerformed(evt);
            }
        });
        rSPanel1.add(btnGuardarAnalisis, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 460, 30, 28));

        jLabel16.setBackground(new java.awt.Color(0, 0, 0));
        jLabel16.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Valor Mínimo");
        rSPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 20, -1, -1));

        jLabel17.setBackground(new java.awt.Color(0, 0, 0));
        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Valor Máximo");
        rSPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 70, -1, -1));

        jLabel20.setBackground(new java.awt.Color(0, 0, 0));
        jLabel20.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Estándar");
        rSPanel1.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 40, -1, -1));

        lblIdAnalisis.setBackground(new java.awt.Color(0, 0, 0));
        lblIdAnalisis.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblIdAnalisis.setForeground(new java.awt.Color(255, 255, 255));
        lblIdAnalisis.setText("0");
        rSPanel1.add(lblIdAnalisis, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 90, 90, -1));

        jLabel22.setBackground(new java.awt.Color(0, 0, 0));
        jLabel22.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(0, 0, 0));
        jLabel22.setText("Valor Mínimo");
        rSPanel1.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 350, -1, -1));

        jLabel23.setBackground(new java.awt.Color(0, 0, 0));
        jLabel23.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(0, 0, 0));
        jLabel23.setText("Cliente");
        rSPanel1.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 370, -1, -1));

        txtMinimoCliente.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtMinimoCliente.setPreferredSize(new java.awt.Dimension(150, 28));
        rSPanel1.add(txtMinimoCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 360, 120, -1));

        txtMaximoCliente.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtMaximoCliente.setPreferredSize(new java.awt.Dimension(150, 28));
        rSPanel1.add(txtMaximoCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 360, 120, -1));

        jLabel24.setBackground(new java.awt.Color(0, 0, 0));
        jLabel24.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(0, 0, 0));
        jLabel24.setText("Valor Máximo");
        rSPanel1.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 350, -1, -1));

        jLabel25.setBackground(new java.awt.Color(0, 0, 0));
        jLabel25.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(0, 0, 0));
        jLabel25.setText("Cliente");
        rSPanel1.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 370, -1, -1));

        txtResultado.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtResultado.setPreferredSize(new java.awt.Dimension(150, 28));
        rSPanel1.add(txtResultado, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 410, 120, -1));

        jLabel8.setBackground(new java.awt.Color(0, 0, 0));
        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Resultado");
        rSPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 420, -1, -1));

        jPanel2.setBackground(new java.awt.Color(244, 146, 34));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 2, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 490, Short.MAX_VALUE)
        );

        rSPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 80, 2, 490));

        jLabel9.setBackground(new java.awt.Color(0, 0, 0));
        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Edad");
        rSPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 480, -1, -1));

        txtSexo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtSexo.setForeground(new java.awt.Color(0, 0, 0));
        txtSexo.setPreferredSize(new java.awt.Dimension(150, 28));
        rSPanel1.add(txtSexo, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 470, 100, -1));

        txtEdad.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtEdad.setForeground(new java.awt.Color(0, 0, 0));
        txtEdad.setPreferredSize(new java.awt.Dimension(150, 28));
        rSPanel1.add(txtEdad, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 470, 90, -1));

        jLabel10.setBackground(new java.awt.Color(0, 0, 0));
        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Cliente");
        rSPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 430, -1, -1));

        jLabel12.setBackground(new java.awt.Color(0, 0, 0));
        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jLabel12.setText("Sexo");
        rSPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 480, -1, -1));

        add(rSPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1010, 570));
    }// </editor-fold>//GEN-END:initComponents

    private void tblOrdenesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblOrdenesMouseClicked
        int seleccionar=tblOrdenes.rowAtPoint(evt.getPoint());
        txtNombresCliente.setText(String.valueOf(tblOrdenes.getValueAt(seleccionar, 1)));
        lblIdOrden.setText(String.valueOf(tblOrdenes.getValueAt(seleccionar, 0)));
        txtSexo.setText(String.valueOf(tblOrdenes.getValueAt(seleccionar, 4)));
        txtEdad.setText(String.valueOf(tblOrdenes.getValueAt(seleccionar, 3)));
        ListarAnalis(Integer.parseInt(lblIdOrden.getText()));
        txtMaximoCliente.setText("0");
        txtMinimoCliente.setText("0");
        txtAnalisis.setText("");
        txtResultado.setText("");
    }//GEN-LAST:event_tblOrdenesMouseClicked

    private void tblAnalisisMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAnalisisMouseClicked
        int seleccionar=tblAnalisis.rowAtPoint(evt.getPoint());
        txtAnalisis.setText(String.valueOf(tblAnalisis.getValueAt(seleccionar, 1)));
        lblIdAnalisis.setText(String.valueOf(tblAnalisis.getValueAt(seleccionar, 0)));
        ClsNOrden_Analisis objNON = new ClsNOrden_Analisis();
        ClsEOrden_Analisis objEON = new ClsEOrden_Analisis();
        for(ClsEOrden_Analisis objE:objNON.MtdListarOrden_Analisis()){
            if(objE.getIdAnalisis()==Integer.parseInt(lblIdAnalisis.getText())){
                txtMinimoCliente.setText(objE.getValor_min()+"");
                txtMaximoCliente.setText(objE.getValor_max()+"");
                txtResultado.setText(objE.getResultado());
            }
        }
        
        //CALCULAR RESULTADO AUTOMATICAMENTE
        ClsNValor_referencial objNReferencial = new ClsNValor_referencial();
        ClsEValor_referencial objEReferencial = new ClsEValor_referencial();
        int llave=0;
        float minimo=0;
        float maximo=0;
        
        for(ClsEValor_referencial objE:objNReferencial.MtdListarValor_referencial()){
            if(objE.getIdAnalisis()==Integer.parseInt(lblIdAnalisis.getText())){
                if(objE.getSexo().equals(txtSexo.getText())){
                    int EdadCliente=Integer.parseInt(txtEdad.getText());
                    
                    if(EdadCliente>objE.getEdad_min()&&EdadCliente<objE.getEdad_max()){
                        llave=1;
                    }
                    if(objE.getEdad_max()==0){
                        if(objE.getEdad_min()<EdadCliente){
                            llave=1;
                        }
                    }
                    if(llave==1){
                    minimo=objE.getValor_min();
                    maximo=objE.getValor_max();
                    break;
                    }
                    else{
                    }
                }
                
            }
        }
        if(llave==0){
                                JOptionPane.showMessageDialog(null, "No se pudo encontrar un valor referencial para el cliente, ingrese el resultado manualmente.");
        }
        else{
            //JOptionPane.showMessageDialog(null, "Se encontró un valor referencial para el análisis.");
            Float mincliente=Float.parseFloat(txtMinimoCliente.getText());
            Float maxcliente=Float.parseFloat(txtMaximoCliente.getText());
            Float promedio =(mincliente+maxcliente)/2;
            //JOptionPane.showMessageDialog(null, promedio+" min "+minimo+ " max "+maximo);
            if(promedio<maximo&&promedio>minimo){
                txtResultado.setText("Negativo");
                //JOptionPane.showMessageDialog(null, "Negativo");
            }
            else{
                txtResultado.setText("Positivo");
                //JOptionPane.showMessageDialog(null, "Positivo");
            }
        }
        
        
        
    }//GEN-LAST:event_tblAnalisisMouseClicked

    private void btnGuardarAnalisisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarAnalisisActionPerformed
        ClsNOrden_Analisis objNON = new ClsNOrden_Analisis();
        ClsEOrden_Analisis objEON = new ClsEOrden_Analisis();
        
        objEON.setIdOrden(Integer.parseInt(lblIdOrden.getText()));
        objEON.setIdAnalisis(Integer.parseInt(lblIdAnalisis.getText()));
        objEON.setValor_min(Double.parseDouble(txtMinimoCliente.getText()));
        objEON.setValor_max(Double.parseDouble(txtMaximoCliente.getText()));
        objEON.setResultado(txtResultado.getText());
        objEON.setIdMuestra(3);
        if(objNON.MtdModificarOrden_Analisis(objEON)==true){
            JOptionPane.showMessageDialog(null, "Resultados actualizados correctamente.");
            //GUARDAR HISTORIAL - REGISTRAR
            ClsNHistorial objNH=new ClsNHistorial();
            ClsEHistorial objEH = new ClsEHistorial();
            Date date = new Date();
            DateFormat FechaHora = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
            objEH.setFecha(FechaHora.format(date)+"");
            objEH.setTipo("Modificar Resultados");
            objEH.setAccion(lblNombres.getText()+" "+lblApellidos.getText()+ " modifico los resultados de la orden: "+lblIdOrden.getText());
            objEH.setNro_doc(lblDni.getText());
            if(objNH.MtdRegistrarHistorial(objEH)==true){
            }
            else{
                JOptionPane.showMessageDialog(null, "Error al registrar accion.");
            }
            //FIN GUARDAR HISTORIAL - REGISTRAR
            txtMaximoCliente.setText("0");
            txtMinimoCliente.setText("0");
            txtAnalisis.setText("");
            txtResultado.setText("");
        }
        else{
            JOptionPane.showMessageDialog(null, "Error al actualizar los resultados.");
        }
        try {
            ListarOrdenes();
        } catch (ParseException ex) {
            Logger.getLogger(PnlResultados.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnGuardarAnalisisActionPerformed

    public static void ListarOrdenes() throws ParseException{
        
        DefaultTableModel modelo = (DefaultTableModel) tblOrdenes.getModel();
        try {
            int filas=tblOrdenes.getRowCount();
            for (int i = 0;filas>i; i++) {
                modelo.removeRow(0);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al limpiar la tabla.");
        }
        ClsNOrden objNC=new ClsNOrden();
        ClsNCliente objN=new ClsNCliente();
        String[] datos=new String[6];
        for(ClsEOrden objE:objNC.MtdListarOrden()){
            datos[0]=String.valueOf(objE.getIdOrden());
            for(ClsECliente objEC:objN.MtdListarCliente()){
                if(objEC.getNro_documento().equals(objE.getCliente_nro_documento())){
                    
                    String fecha_nac=objEC.getFech_nacimiento();
                    //int edad;
                    //convertir de string a date
                    SimpleDateFormat formatoDelTexto = new SimpleDateFormat("yyyy-MM-dd");
                     String strFecha = fecha_nac;
                            Date fecha = null;
                            try {
                                fecha = formatoDelTexto.parse(strFecha);
                            } catch (ParseException ex) {
                                ex.printStackTrace();
                            }

                    //OBTENER DIA MES Y ANIO POR SEPARADO
                    Calendar calendar = Calendar.getInstance();
                    calendar.setTime(fecha);

                    int anio = calendar.get(Calendar.YEAR);
                    int mes = calendar.get(Calendar.MONTH)+1;
                    int dia = calendar.get(Calendar.DAY_OF_MONTH);
                       //CALCULAR EDAD
                    LocalDate fHoy= LocalDate.now();
                    LocalDate cumple= LocalDate.of(anio, mes, dia);
                    long edad= ChronoUnit.YEARS.between(cumple, fHoy);
                    datos[1]=objEC.getNombre()+" "+objEC.getApellido();
                    datos[3]=edad+"";
                    datos[4]=objEC.getSexo();
                }
            }
            datos[2]=String.valueOf(objE.getFecha());
            modelo.addRow(datos);
        }
        TableRowSorter<TableModel> Id = new TableRowSorter<TableModel>(modelo);
        tblOrdenes.setRowSorter(Id);
        tblOrdenes.getRowSorter().toggleSortOrder(0);
        txtNombresCliente.setText("");
        txtEdad.setText("");
        txtSexo.setText("");


    }
    public static void ListarAnalis(int IdOrden){
        
        DefaultTableModel modelo = (DefaultTableModel) tblAnalisis.getModel();
        try {
            int filas=tblAnalisis.getRowCount();
            for (int i = 0;filas>i; i++) {
                modelo.removeRow(0);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al limpiar la tabla.");
        }
        ClsNOrden_Analisis objNC=new ClsNOrden_Analisis();
        ClsNAnalisis objN=new ClsNAnalisis();
        String[] datos=new String[5];
        for(ClsEOrden_Analisis objE:objNC.MtdListarOrden_Analisis()){
            datos[0]=String.valueOf(objE.getIdAnalisis());
            if(objE.getIdOrden()==IdOrden){
                for(ClsEAnalisis objEC:objN.MtdListarAnalisis()){
                if(objEC.getIdAnalisis()==objE.getIdAnalisis()){
                    datos[1]=objEC.getNombre();
                }
            }
            modelo.addRow(datos);
            }
        }
        TableRowSorter<TableModel> Id = new TableRowSorter<TableModel>(modelo);
        tblAnalisis.setRowSorter(Id);
        tblAnalisis.getRowSorter().toggleSortOrder(0);
        

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private RSMaterialComponent.RSButtonMaterialIconOne btnGuardarAnalisis;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JLabel lblIdAnalisis;
    private javax.swing.JLabel lblIdOrden;
    private necesario.RSPanel rSPanel1;
    private static javax.swing.JTable tblAnalisis;
    private static javax.swing.JTable tblOrdenes;
    private javax.swing.JTextField txtAnalisis;
    private static javax.swing.JTextField txtEdad;
    private javax.swing.JTextField txtMaximoCliente;
    private javax.swing.JTextField txtMinimoCliente;
    private static javax.swing.JTextField txtNombresCliente;
    private javax.swing.JTextField txtResultado;
    private static javax.swing.JTextField txtSexo;
    // End of variables declaration//GEN-END:variables
}
