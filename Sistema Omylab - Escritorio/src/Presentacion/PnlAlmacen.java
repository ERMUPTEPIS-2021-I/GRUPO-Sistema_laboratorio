/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import Entidad.ClsEHistorial;
import Entidad.ClsEMarca;
import Entidad.ClsEProducto;
import Entidad.ClsEProducto_detalle;
import Entidad.ClsETipo_medida;
import Entidad.ClsETipo_producto;
import Negocios.ClsNHistorial;
import Negocios.ClsNMarca;
import Negocios.ClsNProducto;
import Negocios.ClsNProducto_detalle;
import Negocios.ClsNTipo_medida;
import Negocios.ClsNTipo_producto;
import static Presentacion.FrmPrincipal.lblApellidos;
import static Presentacion.FrmPrincipal.lblDni;
import static Presentacion.FrmPrincipal.lblNombres;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

import com.github.sarxos.webcam.Webcam;
import com.github.sarxos.webcam.WebcamPanel;
import com.github.sarxos.webcam.WebcamResolution;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.text.DateFormat;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
/**
 *
 * @author Brian Anco
 */
public class PnlAlmacen extends javax.swing.JPanel {

    /**
     * Creates new form PnlAlmacen
     */
    BufferedImage ruta;
    int contador = 0;
    Dimension dimension= new Dimension(202,131);
    //Dimension dimension= new Dimension(222,171);
    Dimension dimension1= WebcamResolution.VGA.getSize();
    Webcam webcam = Webcam.getDefault();
    WebcamPanel webcamPanel = new WebcamPanel(webcam,dimension,false);
    
    public PnlAlmacen() {
        initComponents();
        ListarProductosGenerales();
        ListarProductosDetalles();
        LlenarCombos();
        
        //setLocationRelativeTo(null);
        
        webcam.setViewSize(dimension1);
        webcamPanel.setFillArea(true);
        pnlcamara.setLayout(new FlowLayout());
        pnlcamara.add(webcamPanel);
        
        //lblnombrecamara.setText(String.valueOf(webcam));
        apagarBotones();
    }
    public void apagarBotones(){
        btnapagar.setEnabled(false);
        btncapturar.setEnabled(false);
        btnguardar.setEnabled(false);
    }
    public void prenderBotones(){
        btnapagar.setEnabled(true);
        btncapturar.setEnabled(true);
        //btnguardar.setEnabled(false);
    }
    public void cargacamara(){
        btnapagar.setText("Iniciando camara...");
        btncapturar.setText("Iniciando camara...");
        btnguardar.setText("Iniciando camara...");
        btniniciar.setText("Iniciando camara...");
    }
    public void cargocamara(){
        btnapagar.setText("APAGAR");
        btncapturar.setText("CAPTURAR FOTO");
        btnguardar.setText("GUARDAR");
        btniniciar.setText("INICIAR");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rSPanel1 = new necesario.RSPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNombreGeneral = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cboMarcaGeneral = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblGeneral = new javax.swing.JTable();
        btnGuardarGeneral = new RSMaterialComponent.RSButtonMaterialIconOne();
        btnEditarGeneral = new RSMaterialComponent.RSButtonMaterialIconOne();
        txtStockGeneral = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cboTipoGeneral = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblDetalle = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        txtIdDetalle = new javax.swing.JTextField();
        txtNombreDetalle = new javax.swing.JTextField();
        txtCantidadDetalle = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        btnEditarDetalle = new RSMaterialComponent.RSButtonMaterialIconOne();
        txtVencimientoDetalle = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtCantidadGeneral = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cboMedidaGeneral = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnLimpiarDetalle = new RSMaterialComponent.RSButtonMaterialIconOne();
        btnLimpiarGeneral = new RSMaterialComponent.RSButtonMaterialIconOne();
        btnListarTodo = new RSMaterialComponent.RSButtonMaterialIconOne();
        jLabel16 = new javax.swing.JLabel();
        lblCodigo = new javax.swing.JLabel();
        lblIDproducto = new javax.swing.JLabel();
        btniniciar = new javax.swing.JButton();
        btnapagar = new javax.swing.JButton();
        btncapturar = new javax.swing.JButton();
        btnguardar = new javax.swing.JButton();
        pnlcamara = new javax.swing.JPanel();
        lblfoto = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        rSPanel1.setColorBackground(new java.awt.Color(255, 255, 255));
        rSPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(235, 73, 51));
        jLabel1.setText("GESTIONAR PRODUCTOS");
        rSPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        txtNombreGeneral.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtNombreGeneral.setPreferredSize(new java.awt.Dimension(150, 28));
        rSPanel1.add(txtNombreGeneral, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 280, 370, -1));

        jLabel4.setBackground(new java.awt.Color(0, 0, 0));
        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Tipo");
        rSPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 330, -1, -1));

        cboMarcaGeneral.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cboMarcaGeneral.setName(""); // NOI18N
        cboMarcaGeneral.setPreferredSize(new java.awt.Dimension(93, 28));
        cboMarcaGeneral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboMarcaGeneralActionPerformed(evt);
            }
        });
        rSPanel1.add(cboMarcaGeneral, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 400, 110, -1));

        tblGeneral.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblGeneral.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÃ³digo", "Nombre", "Stock"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblGeneral.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblGeneral.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblGeneralMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblGeneral);
        if (tblGeneral.getColumnModel().getColumnCount() > 0) {
            tblGeneral.getColumnModel().getColumn(0).setResizable(false);
            tblGeneral.getColumnModel().getColumn(0).setPreferredWidth(100);
            tblGeneral.getColumnModel().getColumn(1).setResizable(false);
            tblGeneral.getColumnModel().getColumn(1).setPreferredWidth(245);
            tblGeneral.getColumnModel().getColumn(2).setResizable(false);
            tblGeneral.getColumnModel().getColumn(2).setPreferredWidth(99);
        }

        rSPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 450, 150));

        btnGuardarGeneral.setBackground(new java.awt.Color(56, 171, 38));
        btnGuardarGeneral.setBackgroundHover(new java.awt.Color(56, 178, 72));
        btnGuardarGeneral.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.SAVE);
        btnGuardarGeneral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarGeneralActionPerformed(evt);
            }
        });
        rSPanel1.add(btnGuardarGeneral, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 450, 30, 28));

        btnEditarGeneral.setBackground(new java.awt.Color(254, 221, 14));
        btnEditarGeneral.setBackgroundHover(new java.awt.Color(254, 218, 75));
        btnEditarGeneral.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.EDIT);
        btnEditarGeneral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarGeneralActionPerformed(evt);
            }
        });
        rSPanel1.add(btnEditarGeneral, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 450, 30, 28));

        txtStockGeneral.setEditable(false);
        txtStockGeneral.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtStockGeneral.setText("0");
        txtStockGeneral.setPreferredSize(new java.awt.Dimension(150, 28));
        rSPanel1.add(txtStockGeneral, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 320, 110, -1));

        jLabel7.setBackground(new java.awt.Color(0, 0, 0));
        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Stock");
        rSPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 330, -1, -1));

        jLabel8.setBackground(new java.awt.Color(0, 0, 0));
        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setText("Marca");
        rSPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 410, -1, -1));

        cboTipoGeneral.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cboTipoGeneral.setName(""); // NOI18N
        cboTipoGeneral.setPreferredSize(new java.awt.Dimension(93, 28));
        cboTipoGeneral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTipoGeneralActionPerformed(evt);
            }
        });
        rSPanel1.add(cboTipoGeneral, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 320, 160, -1));

        tblDetalle.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblDetalle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Cantidad", "Medida", "F. de Vencimiento", "Producto"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDetalle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDetalleMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblDetalle);
        if (tblDetalle.getColumnModel().getColumnCount() > 0) {
            tblDetalle.getColumnModel().getColumn(0).setResizable(false);
            tblDetalle.getColumnModel().getColumn(0).setPreferredWidth(50);
            tblDetalle.getColumnModel().getColumn(1).setResizable(false);
            tblDetalle.getColumnModel().getColumn(1).setPreferredWidth(50);
            tblDetalle.getColumnModel().getColumn(2).setResizable(false);
            tblDetalle.getColumnModel().getColumn(2).setPreferredWidth(50);
            tblDetalle.getColumnModel().getColumn(3).setResizable(false);
            tblDetalle.getColumnModel().getColumn(3).setPreferredWidth(100);
            tblDetalle.getColumnModel().getColumn(4).setResizable(false);
            tblDetalle.getColumnModel().getColumn(4).setPreferredWidth(150);
        }

        rSPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 40, 450, 150));

        jLabel5.setBackground(new java.awt.Color(0, 0, 0));
        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("ID");
        rSPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 200, -1, -1));

        txtIdDetalle.setEditable(false);
        txtIdDetalle.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtIdDetalle.setPreferredSize(new java.awt.Dimension(150, 28));
        rSPanel1.add(txtIdDetalle, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 200, 70, -1));

        txtNombreDetalle.setEditable(false);
        txtNombreDetalle.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtNombreDetalle.setPreferredSize(new java.awt.Dimension(150, 28));
        rSPanel1.add(txtNombreDetalle, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 240, 370, -1));

        txtCantidadDetalle.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtCantidadDetalle.setPreferredSize(new java.awt.Dimension(150, 28));
        rSPanel1.add(txtCantidadDetalle, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 280, 110, -1));

        jLabel9.setBackground(new java.awt.Color(0, 0, 0));
        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setText("Cantidad");
        rSPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 290, -1, -1));

        jLabel10.setBackground(new java.awt.Color(0, 0, 0));
        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel10.setText("Nombre");
        rSPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 250, -1, -1));

        btnEditarDetalle.setBackground(new java.awt.Color(254, 221, 14));
        btnEditarDetalle.setBackgroundHover(new java.awt.Color(254, 218, 75));
        btnEditarDetalle.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.EDIT);
        btnEditarDetalle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarDetalleActionPerformed(evt);
            }
        });
        rSPanel1.add(btnEditarDetalle, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 360, 30, 28));

        txtVencimientoDetalle.setEditable(false);
        txtVencimientoDetalle.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtVencimientoDetalle.setPreferredSize(new java.awt.Dimension(150, 28));
        rSPanel1.add(txtVencimientoDetalle, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 280, 130, -1));

        jLabel11.setBackground(new java.awt.Color(0, 0, 0));
        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel11.setText("F. Vencimiento");
        rSPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 290, 100, -1));

        jLabel12.setBackground(new java.awt.Color(0, 0, 0));
        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel12.setText("Fecha de");
        rSPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 320, -1, -1));

        txtCantidadGeneral.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtCantidadGeneral.setPreferredSize(new java.awt.Dimension(150, 28));
        txtCantidadGeneral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCantidadGeneralActionPerformed(evt);
            }
        });
        rSPanel1.add(txtCantidadGeneral, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 360, 110, -1));

        jLabel13.setBackground(new java.awt.Color(0, 0, 0));
        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel13.setText("Cantidad");
        rSPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, -1, -1));

        jLabel6.setBackground(new java.awt.Color(0, 0, 0));
        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Medida");
        rSPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 370, -1, -1));

        cboMedidaGeneral.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cboMedidaGeneral.setName(""); // NOI18N
        cboMedidaGeneral.setPreferredSize(new java.awt.Dimension(93, 28));
        cboMedidaGeneral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboMedidaGeneralActionPerformed(evt);
            }
        });
        rSPanel1.add(cboMedidaGeneral, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 360, 160, -1));

        jLabel14.setBackground(new java.awt.Color(0, 0, 0));
        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(237, 125, 52));
        jLabel14.setText("Detalle del Producto");
        rSPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 10, -1, -1));

        jLabel15.setBackground(new java.awt.Color(0, 0, 0));
        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(237, 125, 52));
        jLabel15.setText("Lista de Productos");
        rSPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, -1, -1));

        jPanel1.setBackground(new java.awt.Color(244, 146, 34));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 2, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 390, Short.MAX_VALUE)
        );

        rSPanel1.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(502, 10, 2, 390));

        btnLimpiarDetalle.setBackground(new java.awt.Color(0, 153, 153));
        btnLimpiarDetalle.setBackgroundHover(new java.awt.Color(153, 204, 255));
        btnLimpiarDetalle.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.BACKSPACE);
        btnLimpiarDetalle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarDetalleActionPerformed(evt);
            }
        });
        rSPanel1.add(btnLimpiarDetalle, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 360, 30, 28));

        btnLimpiarGeneral.setBackground(new java.awt.Color(0, 153, 153));
        btnLimpiarGeneral.setBackgroundHover(new java.awt.Color(153, 204, 255));
        btnLimpiarGeneral.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.BACKSPACE);
        btnLimpiarGeneral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarGeneralActionPerformed(evt);
            }
        });
        rSPanel1.add(btnLimpiarGeneral, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 450, 30, 28));

        btnListarTodo.setBackground(new java.awt.Color(0, 153, 153));
        btnListarTodo.setBackgroundHover(new java.awt.Color(153, 204, 255));
        btnListarTodo.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.BACKSPACE);
        btnListarTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarTodoActionPerformed(evt);
            }
        });
        rSPanel1.add(btnListarTodo, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 200, 30, 28));

        jLabel16.setBackground(new java.awt.Color(0, 0, 0));
        jLabel16.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel16.setText("Nombre");
        rSPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, -1, -1));

        lblCodigo.setBackground(new java.awt.Color(0, 0, 0));
        lblCodigo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblCodigo.setText("-");
        rSPanel1.add(lblCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 80, 10, -1));

        lblIDproducto.setBackground(new java.awt.Color(255, 255, 255));
        lblIDproducto.setForeground(new java.awt.Color(255, 255, 255));
        lblIDproducto.setText("id");
        rSPanel1.add(lblIDproducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 340, -1, -1));

        btniniciar.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btniniciar.setText("INICIAR");
        btniniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btniniciarActionPerformed(evt);
            }
        });
        rSPanel1.add(btniniciar, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 410, 80, 30));

        btnapagar.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btnapagar.setText("APAGAR");
        btnapagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnapagarActionPerformed(evt);
            }
        });
        rSPanel1.add(btnapagar, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 460, 80, 30));

        btncapturar.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btncapturar.setText("CAPTURAR FOTO");
        btncapturar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncapturarActionPerformed(evt);
            }
        });
        rSPanel1.add(btncapturar, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 510, -1, -1));

        btnguardar.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btnguardar.setText("GUARDAR");
        btnguardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnguardarActionPerformed(evt);
            }
        });
        rSPanel1.add(btnguardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 550, -1, -1));

        pnlcamara.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout pnlcamaraLayout = new javax.swing.GroupLayout(pnlcamara);
        pnlcamara.setLayout(pnlcamaraLayout);
        pnlcamaraLayout.setHorizontalGroup(
            pnlcamaraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );
        pnlcamaraLayout.setVerticalGroup(
            pnlcamaraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 140, Short.MAX_VALUE)
        );

        rSPanel1.add(pnlcamara, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 400, 200, 140));

        lblfoto.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        rSPanel1.add(lblfoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 410, 190, 130));
        rSPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 520, -1, -1));

        jButton1.setText("Actualizar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        rSPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 10, -1, -1));

        jButton2.setText("Actualizar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        rSPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 80, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rSPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rSPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cboMarcaGeneralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboMarcaGeneralActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboMarcaGeneralActionPerformed

    private void cboTipoGeneralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTipoGeneralActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboTipoGeneralActionPerformed

    private void txtCantidadGeneralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCantidadGeneralActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCantidadGeneralActionPerformed

    private void cboMedidaGeneralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboMedidaGeneralActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboMedidaGeneralActionPerformed

    private void btnLimpiarDetalleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarDetalleActionPerformed
        LimpiarProductosDetalles();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnLimpiarDetalleActionPerformed

    private void btnLimpiarGeneralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarGeneralActionPerformed
        // TODO add your handling code here:
        LimpiarProductosGenerales();
    }//GEN-LAST:event_btnLimpiarGeneralActionPerformed

    private void tblGeneralMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblGeneralMouseClicked
        // TODO add your handling code here: 
        int seleccionar=tblGeneral.rowAtPoint(evt.getPoint());
        
        lblIDproducto.setText(String.valueOf(tblGeneral.getValueAt(seleccionar, 0)));
        txtStockGeneral.setText(String.valueOf(tblGeneral.getValueAt(seleccionar, 2)));
        int idProd=Integer.parseInt(lblIDproducto.getText());
        
        ClsNProducto objNP=new ClsNProducto();
        for(ClsEProducto objEP:objNP.MtdListarProducto()){
            
            if(idProd==objEP.getIdProducto())
            {
                txtNombreGeneral.setText(String.valueOf(objEP.getDescripcion()));
                
//                ImageIcon foto1;
//                foto1 =new ImageIcon(("C:\\Users\\Mathius\\Desktop\\Proyectos Java\\Omylab\\FotosProductos\\"+txtNombreGeneral.getText()+".jpg"));
//                lblfoto.setIcon(foto1);
                ImageIcon wallpaper = new ImageIcon("D:/"+txtNombreGeneral.getText()+".jpg");
                Icon icono = new ImageIcon(wallpaper.getImage().getScaledInstance(lblfoto.getWidth(),lblfoto.getHeight(), Image.SCALE_DEFAULT));
                lblfoto.setIcon(icono);
                this.repaint();
                
                txtCantidadGeneral.setText(String.valueOf(objEP.getCantidad()));
                
                int idTipo_prod=objEP.getIdTipo_producto();
                int idTipo_med=objEP.getIdTipo_medida();
                int idmarca=objEP.getIdMarca();
                
                ClsNTipo_producto objNTP=new ClsNTipo_producto();
                for(ClsETipo_producto objETP:objNTP.MtdListarTipo_producto()){
                    if(idTipo_prod==objETP.getIdTipo_producto())
                    {
                        String tipoprod=String.valueOf(objETP.getDescripcion());
                        cboTipoGeneral.setSelectedItem(tipoprod);
                        break;
                    }
                }
                
                ClsNTipo_medida objNTM=new ClsNTipo_medida();
                for(ClsETipo_medida objETM:objNTM.MtdListarTipo_medida()){
                    if(idTipo_med==objETM.getIdTipo_medida())
                    {
                        String tipomed=String.valueOf(objETM.getDescripcion());
                        cboMedidaGeneral.setSelectedItem(tipomed);
                        break;
                    }
                }
                
                ClsNMarca objNM=new ClsNMarca();
                for(ClsEMarca objEM:objNM.MtdListarMarca()){
                    if(idmarca==objEM.getIdMarca())
                    {
                        String marca=String.valueOf(objEM.getDescripcion());
                        cboMarcaGeneral.setSelectedItem(marca);
                        break;
                    }
                }
                LimpiarProductosDetalles();
                break;
            }
        }
        
        DefaultTableModel modelo = (DefaultTableModel) tblDetalle.getModel();
        try {
            int filas=tblDetalle.getRowCount();
            for (int i = 0;filas>i; i++) {
                modelo.removeRow(0);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al limpiar la tabla.");
        }
        
        ClsNProducto_detalle objNPD=new ClsNProducto_detalle();
        String[] datos=new String[10];
        for(ClsEProducto_detalle objEPD:objNPD.MtdListarProducto_detalle()){
            if(idProd==objEPD.getIdProducto())
            {
                datos[0]=String.valueOf(objEPD.getIdProducto_detalle());
                datos[1]=String.valueOf(objEPD.getCantidad());
                datos[3]=String.valueOf(objEPD.getFech_vencimiento());
                String tipoMed="";
                int idTipoMed=0;
                String producto="";

                int idProd1=objEPD.getIdProducto();
                ClsNProducto objNP1=new ClsNProducto();
                for(ClsEProducto objEP:objNP1.MtdListarProducto()){
                    if(idProd1==objEP.getIdProducto())
                    {
                        idTipoMed=objEP.getIdTipo_medida();
                        producto=objEP.getDescripcion();
                        break;
                    }
                }

                ClsNTipo_medida objNTM=new ClsNTipo_medida();
                for(ClsETipo_medida objETM:objNTM.MtdListarTipo_medida()){
                    if(idTipoMed==objETM.getIdTipo_medida())
                    {
                        tipoMed=String.valueOf(objETM.getDescripcion());
                        break;
                    }
                }
                datos[2]=tipoMed;
                datos[4]=producto;
                modelo.addRow(datos);
            }
        }
        TableRowSorter<TableModel> Id = new TableRowSorter<TableModel>(modelo);
        tblDetalle.setRowSorter(Id);
        tblDetalle.getRowSorter().toggleSortOrder(1);
    }//GEN-LAST:event_tblGeneralMouseClicked

    private void tblDetalleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDetalleMouseClicked
        // TODO add your handling code here:
        int seleccionar=tblDetalle.rowAtPoint(evt.getPoint());
        
        txtIdDetalle.setText(String.valueOf(tblDetalle.getValueAt(seleccionar, 0)));
        txtCantidadDetalle.setText(String.valueOf(tblDetalle.getValueAt(seleccionar, 1)));
        txtVencimientoDetalle.setText(String.valueOf(tblDetalle.getValueAt(seleccionar, 3)));
        
        ClsNProducto_detalle objNPD=new ClsNProducto_detalle();
        for(ClsEProducto_detalle objEPD:objNPD.MtdListarProducto_detalle()){
            int idProdDet=Integer.parseInt(txtIdDetalle.getText());
            if(idProdDet==objEPD.getIdProducto_detalle())
            {
                int idProducto=objEPD.getIdProducto();
                lblIDproducto.setText(String.valueOf(idProducto));
                ClsNProducto objNP=new ClsNProducto();
                for(ClsEProducto objEP:objNP.MtdListarProducto()){
                    if(idProducto==objEP.getIdProducto())
                    {
                        String tipoMed="";
                        int idTipo=objEP.getIdTipo_medida();
                        ClsNTipo_medida objNTM=new ClsNTipo_medida();
                        for(ClsETipo_medida objETM:objNTM.MtdListarTipo_medida()){
                            if(idTipo==objETM.getIdTipo_medida())
                            {
                                tipoMed=String.valueOf(objETM.getDescripcion());
                                break;
                            }
                        }
                        String nombre=String.valueOf(objEP.getDescripcion())+" "+ String.valueOf(objEP.getCantidad())+" "+tipoMed;
                        txtNombreDetalle.setText(nombre);
                        break;
                    }
                }
                
                break;
            }
        }
    }//GEN-LAST:event_tblDetalleMouseClicked

    private void btnListarTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarTodoActionPerformed
        // TODO add your handling code here:
        ListarProductosDetalles();
    }//GEN-LAST:event_btnListarTodoActionPerformed

    private void btnGuardarGeneralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarGeneralActionPerformed
        // TODO add your handling code here:
        ClsEProducto objEP=new ClsEProducto();
        ClsNProducto objNP=new ClsNProducto();

        objEP.setDescripcion(txtNombreGeneral.getText());
        objEP.setStock(Integer.parseInt(txtStockGeneral.getText()));   
        objEP.setCantidad(Double.valueOf(txtCantidadGeneral.getText()));   
       
        String tipo_prod=String.valueOf(cboTipoGeneral.getSelectedItem());
        String tipo_med=String.valueOf(cboMedidaGeneral.getSelectedItem());
        String marca=String.valueOf(cboMarcaGeneral.getSelectedItem());
        
        ClsNTipo_producto objNTP=new ClsNTipo_producto();
        for(ClsETipo_producto objETP:objNTP.MtdListarTipo_producto()){
            if(tipo_prod.equals(objETP.getDescripcion()))
            {
                objEP.setIdTipo_producto(objETP.getIdTipo_producto());
                break;
            }
        }
        
        ClsNTipo_medida objNTM=new ClsNTipo_medida();
        for(ClsETipo_medida objETM:objNTM.MtdListarTipo_medida()){
            if(tipo_med.equals(objETM.getDescripcion()))
            {
                objEP.setIdTipo_medida(objETM.getIdTipo_medida());
                break;
            }
        }
        
        ClsNMarca objNM=new ClsNMarca();
        for(ClsEMarca objEM:objNM.MtdListarMarca()){
            if(marca.equals(objEM.getDescripcion()))
            {
                objEP.setIdMarca(objEM.getIdMarca());
                break;
            }
        }
        
        if(objNP.MtdRegistrarProducto(objEP)==true){
            JOptionPane.showMessageDialog(null, "Datos guardados correctamente.");
            /*
            int resp=1;
            
            for(ClsEProducto objEP1:objNP.MtdListarProducto()){
                if(txtNombreGeneral.getText().equals(objEP1.getDescripcion()))
                {
                    //JOptionPane.showMessageDialog(null, "Encontro el producto");
                    String fecha="";
                    int cantProduc=objEP1.getStock();
                    while(resp==1){
                            fecha=JOptionPane.showInputDialog(null, "Ingrese la fecha de vencimiento de los "+String.valueOf(cantProduc)+" productos.\nFormtato: yyyy-mm-dd");
                            resp = JOptionPane.showConfirmDialog(null, "No podrÃ¡ modificar la fecha luego\nÂ¿EstÃ¡ seguro de continuar?", "Verificacion", JOptionPane.YES_NO_OPTION);
                            if (resp == JOptionPane.YES_OPTION) {
                                resp=0;
                            }
                            if (resp == JOptionPane.NO_OPTION) {
                                resp=1;
                            }           
                        }
                    //ingresar a productos dealle - Segun stock ingresado
                    for(int i=0;i<cantProduc;i++){
                        ClsEProducto_detalle objEPD=new ClsEProducto_detalle();
                        ClsNProducto_detalle objNPD=new ClsNProducto_detalle();
                        
                        objEPD.setIdProducto(objEP1.getIdProducto());
                        objEPD.setCantidad(objEP1.getCantidad());
                        objEPD.setFech_vencimiento(fecha);
                        
                        JOptionPane.showMessageDialog(null, fecha);
                        if(objNPD.MtdRegistrarProducto_detalle(objEPD)==true){
                            JOptionPane.showMessageDialog(null, "Datos guardados correctamente.");
                            //GUARDAR HISTORIAL - REGISTRAR
                            ClsNHistorial objNH=new ClsNHistorial();
                            ClsEHistorial objEH = new ClsEHistorial();
                            Date date = new Date();
                            DateFormat FechaHora = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
                            objEH.setFecha(FechaHora.format(date)+"");
                            objEH.setTipo("Insertar Producto");
                            objEH.setAccion(lblNombres.getText()+" "+lblApellidos.getText()+ " registro un Producto: "+txtNombreGeneral.getText());
                            objEH.setNro_doc(lblDni.getText());
                            if(objNH.MtdRegistrarHistorial(objEH)==true){
                            }
                            else{
                                JOptionPane.showMessageDialog(null, "Error al registrar accion.");
                            }
                            //FIN GUARDAR HISTORIAL - REGISTRAR
                        }
                        else{                
                            JOptionPane.showMessageDialog(null, "Error de Datos en producto detalle");
                        }
                    }
                    
                    break;
                }
            }*/
        }
        else{
            JOptionPane.showMessageDialog(null, "Error de Datos en producto");
        }
        ListarProductosGenerales();
        LimpiarProductosGenerales();
    }//GEN-LAST:event_btnGuardarGeneralActionPerformed

    private void btnEditarGeneralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarGeneralActionPerformed
        // TODO add your handling code here:
        ClsEProducto objEP=new ClsEProducto();
        ClsNProducto objNP=new ClsNProducto();
        
        objEP.setIdProducto(Integer.parseInt(lblIDproducto.getText()));        
        objEP.setDescripcion(txtNombreGeneral.getText());
        objEP.setStock(Integer.parseInt(txtStockGeneral.getText()));   
        objEP.setCantidad(Double.valueOf(txtCantidadGeneral.getText()));   
       
        String tipo_prod=String.valueOf(cboTipoGeneral.getSelectedItem());
        String tipo_med=String.valueOf(cboMedidaGeneral.getSelectedItem());
        String marca=String.valueOf(cboMarcaGeneral.getSelectedItem());
        
        ClsNTipo_producto objNTP=new ClsNTipo_producto();
        for(ClsETipo_producto objETP:objNTP.MtdListarTipo_producto()){
            if(tipo_prod.equals(objETP.getDescripcion()))
            {
                objEP.setIdTipo_producto(objETP.getIdTipo_producto());
                break;
            }
        }
        
        ClsNTipo_medida objNTM=new ClsNTipo_medida();
        for(ClsETipo_medida objETM:objNTM.MtdListarTipo_medida()){
            if(tipo_med.equals(objETM.getDescripcion()))
            {
                objEP.setIdTipo_medida(objETM.getIdTipo_medida());
                break;
            }
        }
        
        ClsNMarca objNM=new ClsNMarca();
        for(ClsEMarca objEM:objNM.MtdListarMarca()){
            if(marca.equals(objEM.getDescripcion()))
            {
                objEP.setIdMarca(objEM.getIdMarca());
                break;
            }
        }
        
        if(objNP.MtdModificarProducto(objEP)==true){
            JOptionPane.showMessageDialog(null, "Datos modificados correctamente.");
            //GUARDAR HISTORIAL - REGISTRAR
                            ClsNHistorial objNH=new ClsNHistorial();
                            ClsEHistorial objEH = new ClsEHistorial();
                            Date date = new Date();
                            DateFormat FechaHora = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
                            objEH.setFecha(FechaHora.format(date)+"");
                            objEH.setTipo("Modificar Producto");
                            objEH.setAccion(lblNombres.getText()+" "+lblApellidos.getText()+ " modifico un Producto: "+txtNombreGeneral.getText());
                            objEH.setNro_doc(lblDni.getText());
                            if(objNH.MtdRegistrarHistorial(objEH)==true){
                            }
                            else{
                                JOptionPane.showMessageDialog(null, "Error al registrar accion.");
                            }
                            //FIN GUARDAR HISTORIAL - REGISTRAR
        }
        else{
            JOptionPane.showMessageDialog(null, "Error de Datos en producto");
        }
        ListarProductosGenerales();
        LimpiarProductosGenerales();
    
    }//GEN-LAST:event_btnEditarGeneralActionPerformed

    private void btnEditarDetalleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarDetalleActionPerformed
        // TODO add your handling code here:
        ClsEProducto_detalle objEPD=new ClsEProducto_detalle();
        ClsNProducto_detalle objNPD=new ClsNProducto_detalle();
        
        objEPD.setIdProducto_detalle(Integer.parseInt(txtIdDetalle.getText()));        
        objEPD.setCantidad(Double.valueOf(txtCantidadDetalle.getText()));
        objEPD.setFech_vencimiento(txtVencimientoDetalle.getText());   
        objEPD.setIdProducto(Integer.parseInt(lblIDproducto.getText()));
        
        if(objNPD.MtdModificarProducto_detalle(objEPD)==true){
            JOptionPane.showMessageDialog(null, "Datos modificados correctamente.");
            
        }
        else{
            JOptionPane.showMessageDialog(null, "Error de Datos en producto");
        }
        ListarProductosDetalles();
        LimpiarProductosDetalles();
    }//GEN-LAST:event_btnEditarDetalleActionPerformed

    private void btniniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btniniciarActionPerformed
        // TODO add your handling code here:
        //String nombre=txtNombreGeneral.getText();
        if(txtNombreGeneral.getText().equals("")){
            JOptionPane.showMessageDialog(null,"Escoga un producto");
              
            
        }
        else{
            //JOptionPane.showMessageDialog(null,"hola");
            cargacamara();
        //cargocamara()
        Thread hilo = new Thread(){
            @Override
            public void run(){
                webcamPanel.start();
                prenderBotones();
                cargocamara();
            }
        };
        hilo.setDaemon(true);
        hilo.start();
        btniniciar.setEnabled(false);
        }
        
    }//GEN-LAST:event_btniniciarActionPerformed

    private void btnapagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnapagarActionPerformed
        // TODO add your handling code here:
        webcamPanel.stop();
        apagarBotones();
        btniniciar.setEnabled(true);
    }//GEN-LAST:event_btnapagarActionPerformed

    private void btncapturarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncapturarActionPerformed
        // TODO add your handling code here:
        btncapturar.setText("Tomar otro foto");
        btnguardar.setEnabled(true);

        ImageIcon foto;
        foto = new ImageIcon(webcam.getImage());
        Icon iconoFoto = new ImageIcon(foto.getImage().getScaledInstance(lblfoto.getWidth(),lblfoto.getHeight(), Image.SCALE_SMOOTH));
        lblfoto.setIcon(iconoFoto);

        ruta=webcam.getImage();
        
        
    }//GEN-LAST:event_btncapturarActionPerformed

    private void btnguardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnguardarActionPerformed
        // TODO add your handling code here:
        int pregunta = JOptionPane.showConfirmDialog(this,"Â¿Guardar Fotografia?","PREGUNTA",JOptionPane.YES_NO_OPTION,JOptionPane.INFORMATION_MESSAGE);
        if(pregunta==0){
            File salidaImagen =new File("D:\\"+txtNombreGeneral.getText()+".jpg");
            try{
                ImageIO.write(ruta, "jpg", salidaImagen);
                JOptionPane.showMessageDialog(this,"Image guardada en:" + salidaImagen.getAbsolutePath());
            }catch(Exception e){
                System.out.println("Error: " + e);
            }
            lblfoto.setIcon(null);
            //lblfoto.setIcon(Base.png);
            btnguardar.setEnabled(false);
            btncapturar.setText("CAPTURAR");
            
            ImageIcon wallpaper = new ImageIcon("D:/"+txtNombreGeneral.getText()+".jpg");
            Icon icono = new ImageIcon(wallpaper.getImage().getScaledInstance(lblfoto.getWidth(),lblfoto.getHeight(), Image.SCALE_DEFAULT));
            lblfoto.setIcon(icono);
            this.repaint();
        }
        contador++;
        
    }//GEN-LAST:event_btnguardarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        ListarProductosGenerales();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        ListarProductosDetalles();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private RSMaterialComponent.RSButtonMaterialIconOne btnEditarDetalle;
    private RSMaterialComponent.RSButtonMaterialIconOne btnEditarGeneral;
    private RSMaterialComponent.RSButtonMaterialIconOne btnGuardarGeneral;
    private RSMaterialComponent.RSButtonMaterialIconOne btnLimpiarDetalle;
    private RSMaterialComponent.RSButtonMaterialIconOne btnLimpiarGeneral;
    private RSMaterialComponent.RSButtonMaterialIconOne btnListarTodo;
    private javax.swing.JButton btnapagar;
    private javax.swing.JButton btncapturar;
    private javax.swing.JButton btnguardar;
    private javax.swing.JButton btniniciar;
    private static javax.swing.JComboBox<String> cboMarcaGeneral;
    private static javax.swing.JComboBox<String> cboMedidaGeneral;
    private static javax.swing.JComboBox<String> cboTipoGeneral;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblCodigo;
    private javax.swing.JLabel lblIDproducto;
    private javax.swing.JLabel lblfoto;
    private javax.swing.JPanel pnlcamara;
    private necesario.RSPanel rSPanel1;
    private javax.swing.JTable tblDetalle;
    private javax.swing.JTable tblGeneral;
    private javax.swing.JTextField txtCantidadDetalle;
    private javax.swing.JTextField txtCantidadGeneral;
    private javax.swing.JTextField txtIdDetalle;
    private javax.swing.JTextField txtNombreDetalle;
    private javax.swing.JTextField txtNombreGeneral;
    private javax.swing.JTextField txtStockGeneral;
    private javax.swing.JTextField txtVencimientoDetalle;
    // End of variables declaration//GEN-END:variables

    private void ListarProductosGenerales() {
        
        DefaultTableModel modelo = (DefaultTableModel) tblGeneral.getModel();
        try {
            int filas=tblGeneral.getRowCount();
            for (int i = 0;filas>i; i++) {
                modelo.removeRow(0);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al limpiar la tabla.");
        }
        ClsNProducto objNP=new ClsNProducto();
        String[] datos=new String[10];
        for(ClsEProducto objEP:objNP.MtdListarProducto()){
            datos[0]=String.valueOf(objEP.getIdProducto());
            
            String tipoMed="";
            int idTipo=objEP.getIdTipo_medida();
            ClsNTipo_medida objNTM=new ClsNTipo_medida();
            for(ClsETipo_medida objETM:objNTM.MtdListarTipo_medida()){
                if(idTipo==objETM.getIdTipo_medida())
                {
                    tipoMed=String.valueOf(objETM.getDescripcion());
                    break;
                }
            }
            String nombre=String.valueOf(objEP.getDescripcion())+" "+ String.valueOf(objEP.getCantidad())+" "+tipoMed;
            datos[1]=nombre;
            datos[2]=String.valueOf(objEP.getStock());
            modelo.addRow(datos);
        }
        TableRowSorter<TableModel> Id = new TableRowSorter<TableModel>(modelo);
        tblGeneral.setRowSorter(Id);
        tblGeneral.getRowSorter().toggleSortOrder(1);
        
    }

    private void LimpiarProductosGenerales() {
        lblIDproducto.setText("-");
        txtNombreGeneral.setText("");
        txtCantidadGeneral.setText("");
        txtStockGeneral.setText("");
        
    }

    private void LimpiarProductosDetalles() {
        txtIdDetalle.setText("");
        txtCantidadDetalle.setText("");
        txtNombreDetalle.setText("");
        txtVencimientoDetalle.setText("");
        
    }

    private void ListarProductosDetalles() {
    
        DefaultTableModel modelo = (DefaultTableModel) tblDetalle.getModel();
        try {
            int filas=tblDetalle.getRowCount();
            for (int i = 0;filas>i; i++) {
                modelo.removeRow(0);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al limpiar la tabla.");
        }
        ClsNProducto_detalle objNPD=new ClsNProducto_detalle();
        String[] datos=new String[10];
        for(ClsEProducto_detalle objEPD:objNPD.MtdListarProducto_detalle()){
            datos[0]=String.valueOf(objEPD.getIdProducto_detalle());
            datos[1]=String.valueOf(objEPD.getCantidad());
            datos[3]=String.valueOf(objEPD.getFech_vencimiento());
            String tipoMed="";
            int idTipoMed=0;
            String producto="";
            
            int idProd=objEPD.getIdProducto();
            ClsNProducto objNP=new ClsNProducto();
            for(ClsEProducto objEP:objNP.MtdListarProducto()){
                if(idProd==objEP.getIdProducto())
                {
                    idTipoMed=objEP.getIdTipo_medida();
                    producto=objEP.getDescripcion();
                    break;
                }
            }
            
            ClsNTipo_medida objNTM=new ClsNTipo_medida();
            for(ClsETipo_medida objETM:objNTM.MtdListarTipo_medida()){
                if(idTipoMed==objETM.getIdTipo_medida())
                {
                    tipoMed=String.valueOf(objETM.getDescripcion());
                    break;
                }
            }
            datos[2]=tipoMed;
            datos[4]=producto;
            modelo.addRow(datos);
        }
        TableRowSorter<TableModel> Id = new TableRowSorter<TableModel>(modelo);
        tblDetalle.setRowSorter(Id);
        tblDetalle.getRowSorter().toggleSortOrder(1);
    }

    public static void LlenarCombos() {
        cboMarcaGeneral.removeAllItems();        
        ClsNMarca objNM=new ClsNMarca();
            for(ClsEMarca  objEM:objNM.MtdListarMarca()){
                cboMarcaGeneral.addItem(String.valueOf(objEM.getDescripcion()));
            } 
            
        cboMedidaGeneral.removeAllItems();        
        ClsNTipo_medida objNTM=new ClsNTipo_medida();
            for(ClsETipo_medida  objETM:objNTM.MtdListarTipo_medida()){
                cboMedidaGeneral.addItem(String.valueOf(objETM.getDescripcion()));
            } 
        
        cboTipoGeneral.removeAllItems();        
        ClsNTipo_producto objNTP=new ClsNTipo_producto();
            for(ClsETipo_producto  objETP:objNTP.MtdListarTipo_producto()){
                cboTipoGeneral.addItem(String.valueOf(objETP.getDescripcion()));
            } 
    }
}
