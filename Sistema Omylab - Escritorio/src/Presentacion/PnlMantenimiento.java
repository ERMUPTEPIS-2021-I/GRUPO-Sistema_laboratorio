/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import Entidad.*;
import Negocios.*;
import static Presentacion.FrmPrincipal.lblApellidos;
import static Presentacion.FrmPrincipal.lblDni;
import static Presentacion.FrmPrincipal.lblNombres;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Brian Anco
 */
public class PnlMantenimiento extends javax.swing.JPanel {

    /**
     * Creates new form PnlOrdenes
     */
    public PnlMantenimiento() {
        
        initComponents();
        ListarTipoDocumento();
        ListarMuestras();
        ListarTipoProducto();
        ListarTipoMedida();
    }
    
    
    public static void ListarTipoDocumento(){
        DefaultTableModel modelo = (DefaultTableModel) tblDocumento.getModel();
        try {
            int filas=tblDocumento.getRowCount();
            for (int i = 0;filas>i; i++) {
                modelo.removeRow(0);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al limpiar la tabla.");
        }
        ClsNTipo_documento objNC=new ClsNTipo_documento();
        String[] datos=new String[4];
        for(ClsETipo_documento objE:objNC.MtdListarTipo_documento()){
            datos[0]=String.valueOf(objE.getIdTipo_documento());
            datos[1]=objE.getDescripcion();
            modelo.addRow(datos);
        }
        TableRowSorter<TableModel> Id = new TableRowSorter<TableModel>(modelo);
        tblDocumento.setRowSorter(Id);
        tblDocumento.getRowSorter().toggleSortOrder(0);
    }
    
    public static void ListarMuestras(){
        DefaultTableModel modelo = (DefaultTableModel) tblMuestra.getModel();
        try {
            int filas=tblMuestra.getRowCount();
            for (int i = 0;filas>i; i++) {
                modelo.removeRow(0);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al limpiar la tabla.");
        }
        ClsNMuestra objNC=new ClsNMuestra();
        String[] datos=new String[4];
        for(ClsEMuestra objE:objNC.MtdListarMuestra()){
            datos[0]=String.valueOf(objE.getIdMuestra());
            datos[1]=objE.getDescripcion();
            modelo.addRow(datos);
        }
        TableRowSorter<TableModel> Id = new TableRowSorter<TableModel>(modelo);
        tblMuestra.setRowSorter(Id);
        tblMuestra.getRowSorter().toggleSortOrder(0);
    }
    
    public static void ListarTipoProducto(){
        DefaultTableModel modelo = (DefaultTableModel) tblProducto.getModel();
        try {
            int filas=tblProducto.getRowCount();
            for (int i = 0;filas>i; i++) {
                modelo.removeRow(0);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al limpiar la tabla.");
        }
        ClsNTipo_producto objNC=new ClsNTipo_producto();
        String[] datos=new String[4];
        for(ClsETipo_producto objE:objNC.MtdListarTipo_producto()){
            datos[0]=String.valueOf(objE.getIdTipo_producto());
            datos[1]=objE.getDescripcion();
            modelo.addRow(datos);
        }
        TableRowSorter<TableModel> Id = new TableRowSorter<TableModel>(modelo);
        tblProducto.setRowSorter(Id);
        tblProducto.getRowSorter().toggleSortOrder(0);
    }
    
    public static void ListarTipoMedida(){
        DefaultTableModel modelo = (DefaultTableModel) tblMedida.getModel();
        try {
            int filas=tblMedida.getRowCount();
            for (int i = 0;filas>i; i++) {
                modelo.removeRow(0);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al limpiar la tabla.");
        }
        ClsNTipo_medida objNC=new ClsNTipo_medida();
        String[] datos=new String[4];
        for(ClsETipo_medida objE:objNC.MtdListarTipo_medida()){
            datos[0]=String.valueOf(objE.getIdTipo_medida());
            datos[1]=objE.getDescripcion();
            modelo.addRow(datos);
        }
        TableRowSorter<TableModel> Id = new TableRowSorter<TableModel>(modelo);
        tblMedida.setRowSorter(Id);
        tblMedida.getRowSorter().toggleSortOrder(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rSPanel1 = new necesario.RSPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtDocumento = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblMedida = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        btnGuardarDocumento = new RSMaterialComponent.RSButtonMaterialIconOne();
        btnEditarDocumento = new RSMaterialComponent.RSButtonMaterialIconOne();
        btnEliminarDocumento = new RSMaterialComponent.RSButtonMaterialIconOne();
        jLabel18 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtMuestra = new javax.swing.JTextField();
        btnGuardarMuestra = new RSMaterialComponent.RSButtonMaterialIconOne();
        btnEditarMuestra = new RSMaterialComponent.RSButtonMaterialIconOne();
        btnEliminarMuestra = new RSMaterialComponent.RSButtonMaterialIconOne();
        jLabel19 = new javax.swing.JLabel();
        lblIdDocumento = new javax.swing.JLabel();
        txtProducto = new javax.swing.JTextField();
        btnGuardarProducto = new RSMaterialComponent.RSButtonMaterialIconOne();
        btnEditarProducto = new RSMaterialComponent.RSButtonMaterialIconOne();
        btnEliminarProducto = new RSMaterialComponent.RSButtonMaterialIconOne();
        jLabel26 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtMedida = new javax.swing.JTextField();
        btnGuardarMedida = new RSMaterialComponent.RSButtonMaterialIconOne();
        btnEditarMedida = new RSMaterialComponent.RSButtonMaterialIconOne();
        btnEliminarMedida = new RSMaterialComponent.RSButtonMaterialIconOne();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblDocumento = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        tblMuestra = new javax.swing.JTable();
        jScrollPane8 = new javax.swing.JScrollPane();
        tblProducto = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        lblIdProducto = new javax.swing.JLabel();
        lblIdMedida = new javax.swing.JLabel();
        lblIdMuestra = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        rSPanel1.setColorBackground(new java.awt.Color(255, 255, 255));
        rSPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(235, 73, 51));
        jLabel1.setText("MANTENIMIENTO");
        rSPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        jLabel3.setBackground(new java.awt.Color(0, 0, 0));
        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Nombre");
        rSPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 430, -1, -1));

        txtDocumento.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtDocumento.setPreferredSize(new java.awt.Dimension(150, 28));
        rSPanel1.add(txtDocumento, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 420, 120, -1));

        tblMedida.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblMedida.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Tipo de Medida"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMedida.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMedidaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblMedida);
        if (tblMedida.getColumnModel().getColumnCount() > 0) {
            tblMedida.getColumnModel().getColumn(0).setResizable(false);
            tblMedida.getColumnModel().getColumn(0).setPreferredWidth(1);
            tblMedida.getColumnModel().getColumn(1).setResizable(false);
        }

        rSPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 130, 200, 260));

        jLabel14.setBackground(new java.awt.Color(0, 0, 0));
        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(237, 125, 52));
        jLabel14.setText("Tipo de Documento");
        rSPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, -1, -1));

        btnGuardarDocumento.setBackground(new java.awt.Color(56, 171, 38));
        btnGuardarDocumento.setBackgroundHover(new java.awt.Color(56, 178, 72));
        btnGuardarDocumento.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.SAVE);
        btnGuardarDocumento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarDocumentoActionPerformed(evt);
            }
        });
        rSPanel1.add(btnGuardarDocumento, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 480, 30, 28));

        btnEditarDocumento.setBackground(new java.awt.Color(254, 221, 14));
        btnEditarDocumento.setBackgroundHover(new java.awt.Color(254, 218, 75));
        btnEditarDocumento.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.EDIT);
        btnEditarDocumento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarDocumentoActionPerformed(evt);
            }
        });
        rSPanel1.add(btnEditarDocumento, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 480, 30, 28));

        btnEliminarDocumento.setBackground(new java.awt.Color(210, 0, 0));
        btnEliminarDocumento.setBackgroundHover(new java.awt.Color(219, 35, 48));
        btnEliminarDocumento.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.DELETE);
        btnEliminarDocumento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarDocumentoActionPerformed(evt);
            }
        });
        rSPanel1.add(btnEliminarDocumento, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 480, 30, 28));

        jLabel18.setBackground(new java.awt.Color(0, 0, 0));
        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(237, 125, 52));
        jLabel18.setText("Muestras");
        rSPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 90, -1, -1));

        jLabel9.setBackground(new java.awt.Color(0, 0, 0));
        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setText("Nombre");
        rSPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 430, -1, -1));

        txtMuestra.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtMuestra.setPreferredSize(new java.awt.Dimension(150, 28));
        rSPanel1.add(txtMuestra, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 420, 120, -1));

        btnGuardarMuestra.setBackground(new java.awt.Color(56, 171, 38));
        btnGuardarMuestra.setBackgroundHover(new java.awt.Color(56, 178, 72));
        btnGuardarMuestra.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.SAVE);
        btnGuardarMuestra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarMuestraActionPerformed(evt);
            }
        });
        rSPanel1.add(btnGuardarMuestra, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 480, 30, 28));

        btnEditarMuestra.setBackground(new java.awt.Color(254, 221, 14));
        btnEditarMuestra.setBackgroundHover(new java.awt.Color(254, 218, 75));
        btnEditarMuestra.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.EDIT);
        btnEditarMuestra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarMuestraActionPerformed(evt);
            }
        });
        rSPanel1.add(btnEditarMuestra, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 480, 30, 28));

        btnEliminarMuestra.setBackground(new java.awt.Color(210, 0, 0));
        btnEliminarMuestra.setBackgroundHover(new java.awt.Color(219, 35, 48));
        btnEliminarMuestra.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.DELETE);
        btnEliminarMuestra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarMuestraActionPerformed(evt);
            }
        });
        rSPanel1.add(btnEliminarMuestra, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 480, 30, 28));

        jLabel19.setBackground(new java.awt.Color(0, 0, 0));
        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(237, 125, 52));
        jLabel19.setText("Tipo de Producto");
        rSPanel1.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 90, -1, 20));

        lblIdDocumento.setBackground(new java.awt.Color(0, 0, 0));
        lblIdDocumento.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblIdDocumento.setForeground(new java.awt.Color(255, 255, 255));
        lblIdDocumento.setText("Nombre");
        rSPanel1.add(lblIdDocumento, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 400, -1, -1));

        txtProducto.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtProducto.setPreferredSize(new java.awt.Dimension(150, 28));
        rSPanel1.add(txtProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 420, 120, -1));

        btnGuardarProducto.setBackground(new java.awt.Color(56, 171, 38));
        btnGuardarProducto.setBackgroundHover(new java.awt.Color(56, 178, 72));
        btnGuardarProducto.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.SAVE);
        btnGuardarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarProductoActionPerformed(evt);
            }
        });
        rSPanel1.add(btnGuardarProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 480, 30, 28));

        btnEditarProducto.setBackground(new java.awt.Color(254, 221, 14));
        btnEditarProducto.setBackgroundHover(new java.awt.Color(254, 218, 75));
        btnEditarProducto.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.EDIT);
        btnEditarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarProductoActionPerformed(evt);
            }
        });
        rSPanel1.add(btnEditarProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 480, 30, 28));

        btnEliminarProducto.setBackground(new java.awt.Color(210, 0, 0));
        btnEliminarProducto.setBackgroundHover(new java.awt.Color(219, 35, 48));
        btnEliminarProducto.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.DELETE);
        btnEliminarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarProductoActionPerformed(evt);
            }
        });
        rSPanel1.add(btnEliminarProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 480, 30, 28));

        jLabel26.setBackground(new java.awt.Color(0, 0, 0));
        jLabel26.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(237, 125, 52));
        jLabel26.setText("Tipo de Medida");
        rSPanel1.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 90, -1, -1));

        jLabel12.setBackground(new java.awt.Color(0, 0, 0));
        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel12.setText("Nombre");
        rSPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 430, -1, -1));

        txtMedida.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtMedida.setPreferredSize(new java.awt.Dimension(150, 28));
        rSPanel1.add(txtMedida, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 420, 120, -1));

        btnGuardarMedida.setBackground(new java.awt.Color(56, 171, 38));
        btnGuardarMedida.setBackgroundHover(new java.awt.Color(56, 178, 72));
        btnGuardarMedida.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.SAVE);
        btnGuardarMedida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarMedidaActionPerformed(evt);
            }
        });
        rSPanel1.add(btnGuardarMedida, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 480, 30, 28));

        btnEditarMedida.setBackground(new java.awt.Color(254, 221, 14));
        btnEditarMedida.setBackgroundHover(new java.awt.Color(254, 218, 75));
        btnEditarMedida.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.EDIT);
        btnEditarMedida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarMedidaActionPerformed(evt);
            }
        });
        rSPanel1.add(btnEditarMedida, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 480, 30, 28));

        btnEliminarMedida.setBackground(new java.awt.Color(210, 0, 0));
        btnEliminarMedida.setBackgroundHover(new java.awt.Color(219, 35, 48));
        btnEliminarMedida.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.DELETE);
        btnEliminarMedida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarMedidaActionPerformed(evt);
            }
        });
        rSPanel1.add(btnEliminarMedida, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 480, 30, 28));

        jPanel1.setBackground(new java.awt.Color(244, 146, 34));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 2, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 490, Short.MAX_VALUE)
        );

        rSPanel1.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 80, 2, 490));

        jPanel2.setBackground(new java.awt.Color(244, 146, 34));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 2, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 490, Short.MAX_VALUE)
        );

        rSPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 80, 2, 490));

        jPanel3.setBackground(new java.awt.Color(244, 146, 34));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 2, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 490, Short.MAX_VALUE)
        );

        rSPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 80, 2, 490));

        tblDocumento.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblDocumento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Tipo de Documento"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDocumento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDocumentoMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tblDocumento);
        if (tblDocumento.getColumnModel().getColumnCount() > 0) {
            tblDocumento.getColumnModel().getColumn(0).setResizable(false);
            tblDocumento.getColumnModel().getColumn(0).setPreferredWidth(1);
            tblDocumento.getColumnModel().getColumn(1).setResizable(false);
        }

        rSPanel1.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 200, 260));

        tblMuestra.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblMuestra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Muestra"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMuestra.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMuestraMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(tblMuestra);
        if (tblMuestra.getColumnModel().getColumnCount() > 0) {
            tblMuestra.getColumnModel().getColumn(0).setResizable(false);
            tblMuestra.getColumnModel().getColumn(0).setPreferredWidth(1);
            tblMuestra.getColumnModel().getColumn(1).setResizable(false);
        }

        rSPanel1.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 130, 200, 260));

        tblProducto.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblProducto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Tipo de Producto"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblProducto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProductoMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(tblProducto);
        if (tblProducto.getColumnModel().getColumnCount() > 0) {
            tblProducto.getColumnModel().getColumn(0).setResizable(false);
            tblProducto.getColumnModel().getColumn(0).setPreferredWidth(1);
            tblProducto.getColumnModel().getColumn(1).setResizable(false);
        }

        rSPanel1.add(jScrollPane8, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 130, 200, 260));

        jLabel11.setBackground(new java.awt.Color(0, 0, 0));
        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel11.setText("Nombre");
        rSPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 430, -1, -1));

        lblIdProducto.setBackground(new java.awt.Color(0, 0, 0));
        lblIdProducto.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblIdProducto.setForeground(new java.awt.Color(255, 255, 255));
        lblIdProducto.setText("Nombre");
        rSPanel1.add(lblIdProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 400, -1, -1));

        lblIdMedida.setBackground(new java.awt.Color(0, 0, 0));
        lblIdMedida.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblIdMedida.setForeground(new java.awt.Color(255, 255, 255));
        lblIdMedida.setText("Nombre");
        rSPanel1.add(lblIdMedida, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 400, -1, -1));

        lblIdMuestra.setBackground(new java.awt.Color(0, 0, 0));
        lblIdMuestra.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblIdMuestra.setForeground(new java.awt.Color(255, 255, 255));
        lblIdMuestra.setText("Nombre");
        rSPanel1.add(lblIdMuestra, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 400, -1, -1));

        add(rSPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1010, 570));
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarMuestraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarMuestraActionPerformed
        ClsEMuestra objEC=new ClsEMuestra();
        ClsNMuestra objNC=new ClsNMuestra();

        objEC.setDescripcion(txtMuestra.getText());

        if(objNC.MtdRegistrarMuestra(objEC)==true){
            JOptionPane.showMessageDialog(null, "Datos guardados correctamente.");
        }
        else{
            JOptionPane.showMessageDialog(null, "Error de Datos");
        }
        ListarMuestras();
        //GUARDAR HISTORIAL - REGISTRAR
        ClsNHistorial objNH=new ClsNHistorial();
        ClsEHistorial objEH = new ClsEHistorial();
        Date date = new Date();
        DateFormat FechaHora = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        objEH.setFecha(FechaHora.format(date)+"");
        objEH.setTipo("Insertar Muestra");
        objEH.setAccion(lblNombres.getText()+" "+lblApellidos.getText()+ " registro una Muestra: "+txtMuestra.getText());
        objEH.setNro_doc(lblDni.getText());
        if(objNH.MtdRegistrarHistorial(objEH)==true){
        }
        else{
            JOptionPane.showMessageDialog(null, "Error al registrar accion.");
        }
        //FIN GUARDAR HISTORIAL - REGISTRAR
    }//GEN-LAST:event_btnGuardarMuestraActionPerformed

    private void btnEditarMuestraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarMuestraActionPerformed
        ClsEMuestra objEC=new ClsEMuestra();
        ClsNMuestra objNC=new ClsNMuestra();

        //GUARDAR HISTORIAL - MODIFICAR
        ClsNHistorial objNH=new ClsNHistorial();
        ClsEHistorial objEH = new ClsEHistorial();
        Date date = new Date();
        DateFormat FechaHora = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        String accion="";
        
        //Recorremos los resultados del método Listar.
        for(ClsEMuestra objE:objNC.MtdListarMuestra()){
            //If para buscar el ID de la fila a modificar.
            if(lblIdMuestra.getText().equals(String.valueOf(objE.getIdMuestra()))){
                //If para buscar diferencias en los atributos.
                if(txtMuestra.getText().equals(objE.getDescripcion())){
                    
                }
                else{
                    //Insersión en la tabla Historial.
                    objEH.setFecha(FechaHora.format(date)+"");
                    objEH.setTipo("Modificar Muestra");
                    objEH.setAccion(lblNombres.getText()+" "+lblApellidos.getText()+ " modifico una Muestra - Descripcion: "+objE.getDescripcion()+" a "+txtMuestra.getText());
                    objEH.setNro_doc(lblDni.getText());
                    if(objNH.MtdRegistrarHistorial(objEH)==true){
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Error al registrar accion.");
                    }
                }
            }
        }
        
        //FIN GUARDAR HISTORIAL - MODIFICAR
        
        objEC.setIdMuestra(Integer.parseInt(lblIdMuestra.getText()));
        objEC.setDescripcion(txtMuestra.getText());

        if(objNC.MtdModificarMuestra(objEC)==true){
            JOptionPane.showMessageDialog(null, "Datos modificados correctamente.");
        }
        else{
            JOptionPane.showMessageDialog(null, "Error de Datos");
        }
        ListarMuestras();
    }//GEN-LAST:event_btnEditarMuestraActionPerformed

    private void btnEliminarMuestraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarMuestraActionPerformed
        ClsEMuestra objEC=new ClsEMuestra();
        ClsNMuestra objNC=new ClsNMuestra();

        objEC.setIdMuestra(Integer.parseInt(lblIdMuestra.getText()));

        if(objNC.MtdEliminarMuestra(objEC)==true){
            JOptionPane.showMessageDialog(null, "Datos eliminados correctamente.");
        }
        else{
            JOptionPane.showMessageDialog(null, "Error de datos");
        }
        ListarMuestras();
        
        //GUARDAR HISTORIAL - REGISTRAR
        ClsNHistorial objNH=new ClsNHistorial();
        ClsEHistorial objEH = new ClsEHistorial();
        Date date = new Date();
        DateFormat FechaHora = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        objEH.setFecha(FechaHora.format(date)+"");
        objEH.setTipo("Eliminar Muestra");
        objEH.setAccion(lblNombres.getText()+" "+lblApellidos.getText()+ " elimino una Muestra: "+txtMuestra.getText());
        objEH.setNro_doc(lblDni.getText());
        if(objNH.MtdRegistrarHistorial(objEH)==true){
        }
        else{
            JOptionPane.showMessageDialog(null, "Error al registrar accion.");
        }
        //FIN GUARDAR HISTORIAL - REGISTRAR
    }//GEN-LAST:event_btnEliminarMuestraActionPerformed

    private void tblMuestraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMuestraMouseClicked
        int seleccionar=tblMuestra.rowAtPoint(evt.getPoint());
        lblIdMuestra.setText(String.valueOf(tblMuestra.getValueAt(seleccionar, 0)));
        txtMuestra.setText(String.valueOf(tblMuestra.getValueAt(seleccionar, 1)));
        ListarMuestras();
    }//GEN-LAST:event_tblMuestraMouseClicked

    private void btnGuardarDocumentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarDocumentoActionPerformed
        ClsETipo_documento objEC=new ClsETipo_documento();
        ClsNTipo_documento objNC=new ClsNTipo_documento();

        objEC.setDescripcion(txtDocumento.getText());

        if(objNC.MtdRegistrarTipo_documento(objEC)==true){
            JOptionPane.showMessageDialog(null, "Datos guardados correctamente.");
        }
        else{
            JOptionPane.showMessageDialog(null, "Error de Datos");
        }
        ListarTipoDocumento();
        
        //GUARDAR HISTORIAL - REGISTRAR
        ClsNHistorial objNH=new ClsNHistorial();
        ClsEHistorial objEH = new ClsEHistorial();
        Date date = new Date();
        DateFormat FechaHora = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        objEH.setFecha(FechaHora.format(date)+"");
        objEH.setTipo("Insertar Tipo Documento");
        objEH.setAccion(lblNombres.getText()+" "+lblApellidos.getText()+ " registro un Tipo Documento: "+txtDocumento.getText());
        objEH.setNro_doc(lblDni.getText());
        if(objNH.MtdRegistrarHistorial(objEH)==true){
        }
        else{
            JOptionPane.showMessageDialog(null, "Error al registrar accion.");
        }
        //FIN GUARDAR HISTORIAL - REGISTRAR
    }//GEN-LAST:event_btnGuardarDocumentoActionPerformed

    private void btnEditarDocumentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarDocumentoActionPerformed

        ClsETipo_documento objEC=new ClsETipo_documento();
        ClsNTipo_documento objNC=new ClsNTipo_documento();
        
        //GUARDAR HISTORIAL - MODIFICAR
        ClsNHistorial objNH=new ClsNHistorial();
        ClsEHistorial objEH = new ClsEHistorial();
        Date date = new Date();
        DateFormat FechaHora = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        String accion="";
        
        //Recorremos los resultados del método Listar.
        for(ClsETipo_documento objE:objNC.MtdListarTipo_documento()){
            //If para buscar el ID de la fila a modificar.
            if(lblIdDocumento.getText().equals(String.valueOf(objE.getIdTipo_documento()))){
                //If para buscar diferencias en los atributos.getIdTipo_documento
                //Este IF se hace por cada atributo de la tabla
                if(txtDocumento.getText().equals(objE.getDescripcion())){
                    
                }
                else{
                    //Insersión en la tabla Historial.
                    objEH.setFecha(FechaHora.format(date)+"");
                    objEH.setTipo("Modificar Tipo Documento");
                    objEH.setAccion(lblNombres.getText()+" "+lblApellidos.getText()+ " modifico un Tipo Documento - Descripcion: "+objE.getDescripcion()+" a "+txtDocumento.getText());
                    objEH.setNro_doc(lblDni.getText());
                    if(objNH.MtdRegistrarHistorial(objEH)==true){
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Error al registrar accion.");
                    }
                }
            }
        }
        
        //FIN GUARDAR HISTORIAL - MODIFICAR
        
        //MODIFICAR

        objEC.setIdTipo_documento(Integer.parseInt(lblIdDocumento.getText()));
        objEC.setDescripcion(txtDocumento.getText());

        if(objNC.MtdModificarTipo_documento(objEC)==true){
            JOptionPane.showMessageDialog(null, "Datos modificados correctamente.");
        }
        else{
            JOptionPane.showMessageDialog(null, "Error de Datos");
        }
        ListarTipoDocumento();
        //FIN MODIFICAR
    }//GEN-LAST:event_btnEditarDocumentoActionPerformed

    private void btnEliminarDocumentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarDocumentoActionPerformed
        ClsETipo_documento objEC=new ClsETipo_documento();
        ClsNTipo_documento objNC=new ClsNTipo_documento();

        objEC.setIdTipo_documento(Integer.parseInt(lblIdDocumento.getText()));

        if(objNC.MtdEliminarTipo_documento(objEC)==true){
            JOptionPane.showMessageDialog(null, "Datos eliminados correctamente.");
            
            
        }
        else{
            JOptionPane.showMessageDialog(null, "Error de datos");
        }
        ListarTipoDocumento();
        
        //GUARDAR HISTORIAL - ELIMINAR
        ClsNHistorial objNH=new ClsNHistorial();
        ClsEHistorial objEH = new ClsEHistorial();
        Date date = new Date();
        DateFormat FechaHora = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        objEH.setFecha(FechaHora.format(date)+"");
        objEH.setTipo("Eliminar Tipo Documento");
        objEH.setAccion(lblNombres.getText()+" "+lblApellidos.getText()+ " elimino un Tipo Documento: "+txtDocumento.getText());
        objEH.setNro_doc(lblDni.getText());
        if(objNH.MtdRegistrarHistorial(objEH)==true){
        }
        else{
            JOptionPane.showMessageDialog(null, "Error al registrar accion.");
        }
        //FIN GUARDAR HISTORIAL - ELIMINAR
    }//GEN-LAST:event_btnEliminarDocumentoActionPerformed

    private void tblDocumentoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDocumentoMouseClicked
        int seleccionar=tblDocumento.rowAtPoint(evt.getPoint());
        lblIdDocumento.setText(String.valueOf(tblDocumento.getValueAt(seleccionar, 0)));
        txtDocumento.setText(String.valueOf(tblDocumento.getValueAt(seleccionar, 1)));
        ListarTipoDocumento();
    }//GEN-LAST:event_tblDocumentoMouseClicked

    private void btnGuardarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarProductoActionPerformed
        ClsETipo_producto objEC=new ClsETipo_producto();
        ClsNTipo_producto objNC=new ClsNTipo_producto();

        objEC.setDescripcion(txtProducto.getText());

        if(objNC.MtdRegistrarTipo_producto(objEC)==true){
            JOptionPane.showMessageDialog(null, "Datos guardados correctamente.");
        }
        else{
            JOptionPane.showMessageDialog(null, "Error de Datos");
        }
        ListarTipoProducto();
        
        //GUARDAR HISTORIAL - REGISTRAR
        ClsNHistorial objNH=new ClsNHistorial();
        ClsEHistorial objEH = new ClsEHistorial();
        Date date = new Date();
        DateFormat FechaHora = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        objEH.setFecha(FechaHora.format(date)+"");
        objEH.setTipo("Insertar Tipo Producto");
        objEH.setAccion(lblNombres.getText()+" "+lblApellidos.getText()+ " registro un Tipo Producto: "+txtProducto.getText());
        objEH.setNro_doc(lblDni.getText());
        if(objNH.MtdRegistrarHistorial(objEH)==true){
        }
        else{
            JOptionPane.showMessageDialog(null, "Error al registrar accion.");
        }
        //FIN GUARDAR HISTORIAL - REGISTRAR
    }//GEN-LAST:event_btnGuardarProductoActionPerformed

    private void btnEditarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarProductoActionPerformed
        ClsETipo_producto objEC=new ClsETipo_producto();
        ClsNTipo_producto objNC=new ClsNTipo_producto();

        //GUARDAR HISTORIAL - MODIFICAR
        ClsNHistorial objNH=new ClsNHistorial();
        ClsEHistorial objEH = new ClsEHistorial();
        Date date = new Date();
        DateFormat FechaHora = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        String accion="";
        
        //Recorremos los resultados del método Listar.
        for(ClsETipo_producto objE:objNC.MtdListarTipo_producto()){
            //If para buscar el ID de la fila a modificar.
            if(lblIdProducto.getText().equals(String.valueOf(objE.getIdTipo_producto()))){
                //If para buscar diferencias en los atributos.
                if(txtProducto.getText().equals(objE.getDescripcion())){
                    
                }
                else{
                    //Insersión en la tabla Historial.
                    objEH.setFecha(FechaHora.format(date)+"");
                    objEH.setTipo("Modificar Tipo Producto");
                    objEH.setAccion(lblNombres.getText()+" "+lblApellidos.getText()+ " modifico un Tipo Producto - Descripcion: "+objE.getDescripcion()+" a "+txtProducto.getText());
                    objEH.setNro_doc(lblDni.getText());
                    if(objNH.MtdRegistrarHistorial(objEH)==true){
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Error al registrar accion.");
                    }
                }
            }
        }
        
        //FIN GUARDAR HISTORIAL - MODIFICAR
        
        objEC.setIdTipo_producto(Integer.parseInt(lblIdProducto.getText()));
        objEC.setDescripcion(txtProducto.getText());

        if(objNC.MtdModificarTipo_producto(objEC)==true){
            JOptionPane.showMessageDialog(null, "Datos modificados correctamente.");
        }
        else{
            JOptionPane.showMessageDialog(null, "Error de Datos");
        }
        ListarTipoProducto();
    }//GEN-LAST:event_btnEditarProductoActionPerformed

    private void btnEliminarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarProductoActionPerformed
        ClsETipo_producto objEC=new ClsETipo_producto();
        ClsNTipo_producto objNC=new ClsNTipo_producto();

        objEC.setIdTipo_producto(Integer.parseInt(lblIdProducto.getText()));

        if(objNC.MtdEliminarTipo_producto(objEC)==true){
            JOptionPane.showMessageDialog(null, "Datos eliminados correctamente.");
        }
        else{
            JOptionPane.showMessageDialog(null, "Error de datos");
        }
        ListarTipoProducto();
        
        //GUARDAR HISTORIAL - ELIMINAR
        ClsNHistorial objNH=new ClsNHistorial();
        ClsEHistorial objEH = new ClsEHistorial();
        Date date = new Date();
        DateFormat FechaHora = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        objEH.setFecha(FechaHora.format(date)+"");
        objEH.setTipo("Eliminar Tipo Producto");
        objEH.setAccion(lblNombres.getText()+" "+lblApellidos.getText()+ " elimino un Tipo Producto: "+txtProducto.getText());
        objEH.setNro_doc(lblDni.getText());
        if(objNH.MtdRegistrarHistorial(objEH)==true){
        }
        else{
            JOptionPane.showMessageDialog(null, "Error al registrar accion.");
        }
        //FIN GUARDAR HISTORIAL - ELIMINAR
    }//GEN-LAST:event_btnEliminarProductoActionPerformed

    private void tblProductoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProductoMouseClicked
        int seleccionar=tblProducto.rowAtPoint(evt.getPoint());
        lblIdProducto.setText(String.valueOf(tblProducto.getValueAt(seleccionar, 0)));
        txtProducto.setText(String.valueOf(tblProducto.getValueAt(seleccionar, 1)));
        ListarTipoProducto();
    }//GEN-LAST:event_tblProductoMouseClicked

    private void btnGuardarMedidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarMedidaActionPerformed
        // TODO add your handling code here:
        ClsETipo_medida objEC=new ClsETipo_medida();
        ClsNTipo_medida objNC=new ClsNTipo_medida();

        objEC.setDescripcion(txtMedida.getText());

        if(objNC.MtdRegistrarTipo_medida(objEC)==true){
            JOptionPane.showMessageDialog(null, "Datos guardados correctamente.");
        }
        else{
            JOptionPane.showMessageDialog(null, "Error de Datos");
        }
        ListarTipoMedida();
        
        //GUARDAR HISTORIAL - REGISTRAR
        ClsNHistorial objNH=new ClsNHistorial();
        ClsEHistorial objEH = new ClsEHistorial();
        Date date = new Date();
        DateFormat FechaHora = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        objEH.setFecha(FechaHora.format(date)+"");
        objEH.setTipo("Insertar Tipo Medida");
        objEH.setAccion(lblNombres.getText()+" "+lblApellidos.getText()+ " registro un Tipo Medida: "+txtMedida.getText());
        objEH.setNro_doc(lblDni.getText());
        if(objNH.MtdRegistrarHistorial(objEH)==true){
        }
        else{
            JOptionPane.showMessageDialog(null, "Error al registrar accion.");
        }
        //FIN GUARDAR HISTORIAL - REGISTRAR
    }//GEN-LAST:event_btnGuardarMedidaActionPerformed

    private void btnEditarMedidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarMedidaActionPerformed
        // TODO add your handling code here:
        ClsETipo_medida objEC=new ClsETipo_medida();
        ClsNTipo_medida objNC=new ClsNTipo_medida();

        //GUARDAR HISTORIAL - MODIFICAR
        ClsNHistorial objNH = new ClsNHistorial();
        ClsEHistorial objEH = new ClsEHistorial();
        Date date = new Date();
        DateFormat FechaHora = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        String accion="";
        
        //Recorremos los resultados del método Listar.
        for(ClsETipo_medida objE:objNC.MtdListarTipo_medida()){
            //If para buscar el ID de la fila a modificar.
            if(lblIdMedida.getText().equals(String.valueOf(objE.getIdTipo_medida()))){
                //If para buscar diferencias en los atributos.
                if(txtMedida.getText().equals(objE.getDescripcion())){
                    
                }
                else{
                    //Insersión en la tabla Historial.
                    objEH.setFecha(FechaHora.format(date)+"");
                    objEH.setTipo("Modificar Tipo Medida");
                    objEH.setAccion(lblNombres.getText()+" "+lblApellidos.getText()+ " modifico un Tipo Medida - Descripcion: "+objE.getDescripcion()+" a "+txtMedida.getText());
                    objEH.setNro_doc(lblDni.getText());
                    if(objNH.MtdRegistrarHistorial(objEH)==true){
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Error al registrar accion.");
                    }
                }
            }
        }
        
        //FIN GUARDAR HISTORIAL - MODIFICAR
        
        objEC.setIdTipo_medida(Integer.parseInt(lblIdMedida.getText()));
        objEC.setDescripcion(txtMedida.getText());

        if(objNC.MtdModificarTipo_medida(objEC)==true){
            JOptionPane.showMessageDialog(null, "Datos modificados correctamente.");
        }
        else{
            JOptionPane.showMessageDialog(null, "Error de Datos");
        }
        ListarTipoMedida();
    }//GEN-LAST:event_btnEditarMedidaActionPerformed

    private void btnEliminarMedidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarMedidaActionPerformed
        // TODO add your handling code here:
        ClsETipo_medida objEC=new ClsETipo_medida();
        ClsNTipo_medida objNC=new ClsNTipo_medida();

        objEC.setIdTipo_medida(Integer.parseInt(lblIdMedida.getText()));

        if(objNC.MtdEliminarTipo_medida(objEC)==true){
            JOptionPane.showMessageDialog(null, "Datos eliminados correctamente.");
        }
        else{
            JOptionPane.showMessageDialog(null, "Error de datos");
        }
        ListarTipoMedida();
        
        //GUARDAR HISTORIAL - ELIMINAR
        ClsNHistorial objNH=new ClsNHistorial();
        ClsEHistorial objEH = new ClsEHistorial();
        Date date = new Date();
        DateFormat FechaHora = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        objEH.setFecha(FechaHora.format(date)+"");
        objEH.setTipo("Eliminar Tipo Medida");
        objEH.setAccion(lblNombres.getText()+" "+lblApellidos.getText()+ " elimino un Tipo Medida: "+txtMedida.getText());
        objEH.setNro_doc(lblDni.getText());
        if(objNH.MtdRegistrarHistorial(objEH)==true){
        }
        else{
            JOptionPane.showMessageDialog(null, "Error al registrar accion.");
        }
        //FIN GUARDAR HISTORIAL - ELIMINAR
    }//GEN-LAST:event_btnEliminarMedidaActionPerformed

    private void tblMedidaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMedidaMouseClicked
        // TODO add your handling code here:
        int seleccionar=tblMedida.rowAtPoint(evt.getPoint());
        lblIdMedida.setText(String.valueOf(tblMedida.getValueAt(seleccionar, 0)));
        txtMedida.setText(String.valueOf(tblMedida.getValueAt(seleccionar, 1)));
        ListarTipoMedida();
    }//GEN-LAST:event_tblMedidaMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private RSMaterialComponent.RSButtonMaterialIconOne btnEditarDocumento;
    private RSMaterialComponent.RSButtonMaterialIconOne btnEditarMedida;
    private RSMaterialComponent.RSButtonMaterialIconOne btnEditarMuestra;
    private RSMaterialComponent.RSButtonMaterialIconOne btnEditarProducto;
    private RSMaterialComponent.RSButtonMaterialIconOne btnEliminarDocumento;
    private RSMaterialComponent.RSButtonMaterialIconOne btnEliminarMedida;
    private RSMaterialComponent.RSButtonMaterialIconOne btnEliminarMuestra;
    private RSMaterialComponent.RSButtonMaterialIconOne btnEliminarProducto;
    private RSMaterialComponent.RSButtonMaterialIconOne btnGuardarDocumento;
    private RSMaterialComponent.RSButtonMaterialIconOne btnGuardarMedida;
    private RSMaterialComponent.RSButtonMaterialIconOne btnGuardarMuestra;
    private RSMaterialComponent.RSButtonMaterialIconOne btnGuardarProducto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JLabel lblIdDocumento;
    private javax.swing.JLabel lblIdMedida;
    private javax.swing.JLabel lblIdMuestra;
    private javax.swing.JLabel lblIdProducto;
    private necesario.RSPanel rSPanel1;
    private static javax.swing.JTable tblDocumento;
    private static javax.swing.JTable tblMedida;
    private static javax.swing.JTable tblMuestra;
    private static javax.swing.JTable tblProducto;
    private javax.swing.JTextField txtDocumento;
    private javax.swing.JTextField txtMedida;
    private javax.swing.JTextField txtMuestra;
    private javax.swing.JTextField txtProducto;
    // End of variables declaration//GEN-END:variables
}
