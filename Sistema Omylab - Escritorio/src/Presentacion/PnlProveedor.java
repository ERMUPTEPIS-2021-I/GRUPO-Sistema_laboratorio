/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import Entidad.ClsEHistorial;
import Negocios.ClsNHistorial;
import Entidad.ClsEEmpleado;
import Entidad.ClsEMarca;
import Entidad.ClsEProveedor;
import Entidad.ClsETipo_documento;
import Negocios.ClsNEmpleado;
import Negocios.ClsNMarca;
import Negocios.ClsNProveedor;
import Negocios.ClsNTipo_documento;
import static Presentacion.FrmPrincipal.lblApellidos;
import static Presentacion.FrmPrincipal.lblDni;
import static Presentacion.FrmPrincipal.lblNombres;
import static Presentacion.PnlCliente.ListarCliente;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.URL;
import java.net.URLConnection;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Brian Anco
 */
public class PnlProveedor extends javax.swing.JPanel {

    /**
     * Creates new form PnlOrdenes
     */
    public PnlProveedor() {
        initComponents();
        LimpiarProveedor();
        ListarProveedor();
        LimpiarMarca();
        ListarMarca();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rSPanel1 = new necesario.RSPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNumDoc = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtRazonSocial = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cboEstado = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblProveedores = new javax.swing.JTable();
        btnGuardar = new RSMaterialComponent.RSButtonMaterialIconOne();
        btnBuscar = new RSMaterialComponent.RSButtonMaterialIconOne();
        btnEditar = new RSMaterialComponent.RSButtonMaterialIconOne();
        txtDireccion = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtCelular = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        btnLimpiar = new RSMaterialComponent.RSButtonMaterialIconOne();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblMarcas = new javax.swing.JTable();
        lblIdMarca = new javax.swing.JLabel();
        txtMarca = new javax.swing.JTextField();
        btnGuardarMarca = new RSMaterialComponent.RSButtonMaterialIconOne();
        btnEditarMarca = new RSMaterialComponent.RSButtonMaterialIconOne();
        btnEliminarMarca = new RSMaterialComponent.RSButtonMaterialIconOne();
        jLabel9 = new javax.swing.JLabel();
        txtTipoDoc = new javax.swing.JTextField();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        rSPanel1.setColorBackground(new java.awt.Color(255, 255, 255));
        rSPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(235, 73, 51));
        jLabel1.setText("GESTIONAR PROVEEDORES");
        rSPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Nro. Doc.");
        rSPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 105, -1, -1));

        txtNumDoc.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtNumDoc.setPreferredSize(new java.awt.Dimension(150, 28));
        txtNumDoc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumDocKeyTyped(evt);
            }
        });
        rSPanel1.add(txtNumDoc, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 100, 120, -1));

        jLabel3.setBackground(new java.awt.Color(0, 0, 0));
        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Razón");
        rSPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, -1, -1));

        txtRazonSocial.setEditable(false);
        txtRazonSocial.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtRazonSocial.setPreferredSize(new java.awt.Dimension(150, 28));
        rSPanel1.add(txtRazonSocial, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 140, 320, -1));

        jLabel4.setBackground(new java.awt.Color(0, 0, 0));
        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Estado");
        rSPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 225, -1, -1));

        cboEstado.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cboEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Activo", "Inactivo" }));
        cboEstado.setName(""); // NOI18N
        cboEstado.setPreferredSize(new java.awt.Dimension(93, 28));
        rSPanel1.add(cboEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 220, 120, -1));

        tblProveedores.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblProveedores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nro. Doc.", "Tipo Doc.", "Razón", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblProveedores.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblProveedores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProveedoresMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblProveedores);
        if (tblProveedores.getColumnModel().getColumnCount() > 0) {
            tblProveedores.getColumnModel().getColumn(0).setResizable(false);
            tblProveedores.getColumnModel().getColumn(0).setPreferredWidth(120);
            tblProveedores.getColumnModel().getColumn(1).setResizable(false);
            tblProveedores.getColumnModel().getColumn(1).setPreferredWidth(61);
            tblProveedores.getColumnModel().getColumn(2).setResizable(false);
            tblProveedores.getColumnModel().getColumn(2).setPreferredWidth(273);
            tblProveedores.getColumnModel().getColumn(3).setPreferredWidth(80);
        }

        rSPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 101, 540, 440));

        btnGuardar.setBackground(new java.awt.Color(56, 171, 38));
        btnGuardar.setBackgroundHover(new java.awt.Color(56, 178, 72));
        btnGuardar.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.SAVE);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        rSPanel1.add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, 30, 28));

        btnBuscar.setBackground(new java.awt.Color(244, 146, 34));
        btnBuscar.setBackgroundHover(new java.awt.Color(251, 169, 76));
        btnBuscar.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.SEARCH);
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        rSPanel1.add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 100, 30, 28));

        btnEditar.setBackground(new java.awt.Color(254, 221, 14));
        btnEditar.setBackgroundHover(new java.awt.Color(254, 218, 75));
        btnEditar.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.EDIT);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        rSPanel1.add(btnEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 270, 30, 28));

        txtDireccion.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtDireccion.setPreferredSize(new java.awt.Dimension(150, 28));
        rSPanel1.add(txtDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 180, 320, -1));

        jLabel7.setBackground(new java.awt.Color(0, 0, 0));
        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Dirección");
        rSPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 185, -1, -1));

        txtCelular.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtCelular.setPreferredSize(new java.awt.Dimension(150, 28));
        rSPanel1.add(txtCelular, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 220, 110, -1));

        jLabel8.setBackground(new java.awt.Color(0, 0, 0));
        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setText("Celular");
        rSPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 225, -1, -1));

        jLabel6.setBackground(new java.awt.Color(0, 0, 0));
        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Social");
        rSPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, -1, -1));

        jLabel11.setBackground(new java.awt.Color(0, 0, 0));
        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel11.setText("Tipo Doc.");
        rSPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 105, -1, -1));

        btnLimpiar.setBackground(new java.awt.Color(0, 153, 153));
        btnLimpiar.setBackgroundHover(new java.awt.Color(153, 204, 255));
        btnLimpiar.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.BACKSPACE);
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });
        rSPanel1.add(btnLimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 270, 30, 28));

        jLabel14.setBackground(new java.awt.Color(0, 0, 0));
        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(237, 125, 52));
        jLabel14.setText("Marcas");
        rSPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 320, -1, -1));

        tblMarcas.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblMarcas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Marca"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMarcas.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblMarcas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMarcasMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tblMarcas);
        if (tblMarcas.getColumnModel().getColumnCount() > 0) {
            tblMarcas.getColumnModel().getColumn(0).setResizable(false);
            tblMarcas.getColumnModel().getColumn(1).setResizable(false);
            tblMarcas.getColumnModel().getColumn(1).setPreferredWidth(319);
        }

        rSPanel1.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 400, 400, 140));

        lblIdMarca.setBackground(new java.awt.Color(0, 0, 0));
        lblIdMarca.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblIdMarca.setForeground(new java.awt.Color(255, 255, 255));
        lblIdMarca.setText("Nombre");
        rSPanel1.add(lblIdMarca, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 330, -1, -1));

        txtMarca.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtMarca.setPreferredSize(new java.awt.Dimension(150, 28));
        rSPanel1.add(txtMarca, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 360, 190, -1));

        btnGuardarMarca.setBackground(new java.awt.Color(56, 171, 38));
        btnGuardarMarca.setBackgroundHover(new java.awt.Color(56, 178, 72));
        btnGuardarMarca.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.SAVE);
        btnGuardarMarca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarMarcaActionPerformed(evt);
            }
        });
        rSPanel1.add(btnGuardarMarca, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 360, 30, 28));

        btnEditarMarca.setBackground(new java.awt.Color(254, 221, 14));
        btnEditarMarca.setBackgroundHover(new java.awt.Color(254, 218, 75));
        btnEditarMarca.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.EDIT);
        btnEditarMarca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarMarcaActionPerformed(evt);
            }
        });
        rSPanel1.add(btnEditarMarca, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 360, 30, 28));

        btnEliminarMarca.setBackground(new java.awt.Color(210, 0, 0));
        btnEliminarMarca.setBackgroundHover(new java.awt.Color(219, 35, 48));
        btnEliminarMarca.setIcons(rojeru_san.efectos.ValoresEnum.ICONS.DELETE);
        btnEliminarMarca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarMarcaActionPerformed(evt);
            }
        });
        rSPanel1.add(btnEliminarMarca, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 360, 30, 28));

        jLabel9.setBackground(new java.awt.Color(0, 0, 0));
        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setText("Nombre");
        rSPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 365, -1, -1));

        txtTipoDoc.setEditable(false);
        txtTipoDoc.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtTipoDoc.setText("RUC");
        txtTipoDoc.setPreferredSize(new java.awt.Dimension(150, 28));
        txtTipoDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTipoDocActionPerformed(evt);
            }
        });
        rSPanel1.add(txtTipoDoc, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 100, 70, -1));

        add(rSPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1010, 570));
    }// </editor-fold>//GEN-END:initComponents

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
        LimpiarProveedor();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void tblMarcasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMarcasMouseClicked
        int seleccionar=tblMarcas.rowAtPoint(evt.getPoint());
        lblIdMarca.setText(String.valueOf(tblMarcas.getValueAt(seleccionar, 0)));
        txtMarca.setText(String.valueOf(tblMarcas.getValueAt(seleccionar, 1)));
        
    }//GEN-LAST:event_tblMarcasMouseClicked

    private void btnGuardarMarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarMarcaActionPerformed
        ClsEMarca objEC=new ClsEMarca();
        ClsNMarca objNC=new ClsNMarca();

        objEC.setDescripcion(txtMarca.getText());

        if(objNC.MtdRegistrarMarca(objEC)==true){
            JOptionPane.showMessageDialog(null, "Datos guardados correctamente.");
            //GUARDAR HISTORIAL - REGISTRAR
            ClsNHistorial objNH=new ClsNHistorial();
            ClsEHistorial objEH = new ClsEHistorial();
            Date date = new Date();
            DateFormat FechaHora = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
            objEH.setFecha(FechaHora.format(date)+"");
            objEH.setTipo("Insertar Marca");
            objEH.setAccion(lblNombres.getText()+" "+lblApellidos.getText()+ " registro una Marca: "+txtMarca.getText());
            objEH.setNro_doc(lblDni.getText());
            if(objNH.MtdRegistrarHistorial(objEH)==true){               
            }
            else{
                JOptionPane.showMessageDialog(null, "Error al registrar accion.");
            }
            //FIN GUARDAR HISTORIAL - REGISTRAR
        }
        else{
            JOptionPane.showMessageDialog(null, "Error de Datos");
        }
        ListarMarca();
    }//GEN-LAST:event_btnGuardarMarcaActionPerformed

    private void btnEditarMarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarMarcaActionPerformed
        
        ClsEMarca objEC=new ClsEMarca();
        ClsNMarca objNC=new ClsNMarca();
        //GUARDAR HISTORIAL - MODIFICAR
        ClsNHistorial objNH=new ClsNHistorial();
        ClsEHistorial objEH = new ClsEHistorial();
        Date date = new Date();
        DateFormat FechaHora = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        String accion="";
        
        //Recorremos los resultados del método Listar.
        for(ClsEMarca objE:objNC.MtdListarMarca()){
            //If para buscar el ID de la fila a modificar.
            if(lblIdMarca.getText().equals(String.valueOf(objE.getIdMarca()))){
                //If para buscar diferencias en los atributos.
                if(txtMarca.getText().equals(objE.getDescripcion())){
                    
                }
                else{
                    //Insersión en la tabla Historial.
                    objEH.setFecha(FechaHora.format(date)+"");
                    objEH.setTipo("Modificar Marca");
                    objEH.setAccion(lblNombres.getText()+" "+lblApellidos.getText()+ " modifico una Marca - Descripcion: "+objE.getDescripcion()+" a "+txtMarca.getText());
                    objEH.setNro_doc(lblDni.getText());
                    if(objNH.MtdRegistrarHistorial(objEH)==true){
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Error al registrar accion.");
                    }
                }
            }
        }
        
        //FIN GUARDAR HISTORIAL - MODIFICAR
        objEC.setIdMarca(Integer.parseInt(lblIdMarca.getText()));
        objEC.setDescripcion(txtMarca.getText());

        if(objNC.MtdModificarMarca(objEC)==true){
            JOptionPane.showMessageDialog(null, "Datos guardados correctamente.");
        }
        else{
            JOptionPane.showMessageDialog(null, "Error de Datos");
        }
        ListarMarca();
    }//GEN-LAST:event_btnEditarMarcaActionPerformed

    private void btnEliminarMarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarMarcaActionPerformed
        ClsEMarca objEC=new ClsEMarca();
        ClsNMarca objNC=new ClsNMarca();

        objEC.setIdMarca(Integer.parseInt(lblIdMarca.getText()));

        if(objNC.MtdEliminarMarca(objEC)==true){
            JOptionPane.showMessageDialog(null, "Datos guardados correctamente.");
           //GUARDAR HISTORIAL - ELIMINAR
        ClsNHistorial objNH=new ClsNHistorial();
        ClsEHistorial objEH = new ClsEHistorial();
        Date date = new Date();
        DateFormat FechaHora = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        objEH.setFecha(FechaHora.format(date)+"");
        objEH.setTipo("Eliminar Marca");
        objEH.setAccion(lblNombres.getText()+" "+lblApellidos.getText()+ " elimino una Marca: "+txtMarca.getText());
        objEH.setNro_doc(lblDni.getText());
        if(objNH.MtdRegistrarHistorial(objEH)==true){
        }
        else{
            JOptionPane.showMessageDialog(null, "Error al registrar accion.");
        }
        //FIN GUARDAR HISTORIAL - ELIMINAR
        }
        else{
            JOptionPane.showMessageDialog(null, "Error de Datos");
        }
        ListarMarca();
    }//GEN-LAST:event_btnEliminarMarcaActionPerformed

    private void tblProveedoresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProveedoresMouseClicked
        // TODO add your handling code here:
        txtNumDoc.setEditable(false);        
        int seleccionar=tblProveedores.rowAtPoint(evt.getPoint());
        
        txtNumDoc.setText(String.valueOf(tblProveedores.getValueAt(seleccionar, 0)));
        txtRazonSocial.setText(String.valueOf(tblProveedores.getValueAt(seleccionar, 2)));
        cboEstado.setSelectedItem(String.valueOf(tblProveedores.getValueAt(seleccionar, 3)));
        
        ClsNProveedor objNP=new ClsNProveedor();
        for(ClsEProveedor objEP:objNP.MtdListarProveedor()){
            
            if(txtNumDoc.getText().equals(objEP.getNro_documento()))
            {
                txtDireccion.setText(objEP.getDireccion());
                txtCelular.setText(objEP.getCelular());
                break;
            }
        }
    }//GEN-LAST:event_tblProveedoresMouseClicked

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        ClsEProveedor objEP=new ClsEProveedor();
        ClsNProveedor objNP=new ClsNProveedor();

        objEP.setNro_documento(txtNumDoc.getText());
        objEP.setRazon_social(txtRazonSocial.getText());
        objEP.setDireccion(txtDireccion.getText());   
        objEP.setCelular(txtCelular.getText());
        
        String idTipo=String.valueOf(txtTipoDoc.getText());
        ClsNTipo_documento objND=new ClsNTipo_documento();
        for(ClsETipo_documento objE:objND.MtdListarTipo_documento()){
            if(idTipo.equals(objE.getDescripcion()))
            {
                objEP.setIdTipo_documento(objE.getIdTipo_documento());
                break;
            }
        }
        String estado=String.valueOf(cboEstado.getSelectedItem());
        if(estado.equals("Activo")){
            objEP.setEstado(1);
        }
        if(estado.equals("Inactivo")){
            objEP.setEstado(0);
        }
        
        if(objNP.MtdRegistrarProveedor(objEP)==true){
            JOptionPane.showMessageDialog(null, "Datos guardados correctamente.");
            //GUARDAR HISTORIAL - REGISTRAR
            ClsNHistorial objNH=new ClsNHistorial();
            ClsEHistorial objEH = new ClsEHistorial();
            Date date = new Date();
            DateFormat FechaHora = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
            objEH.setFecha(FechaHora.format(date)+"");
            objEH.setTipo("Insertar Proveedor");
            objEH.setAccion(lblNombres.getText()+" "+lblApellidos.getText()+ " registro un Proveedor: "+txtRazonSocial.getText());
            objEH.setNro_doc(lblDni.getText());
            if(objNH.MtdRegistrarHistorial(objEH)==true){               
            }
            else{
                JOptionPane.showMessageDialog(null, "Error al registrar accion.");
            }
            //FIN GUARDAR HISTORIAL - REGISTRAR
        }
        else{
            JOptionPane.showMessageDialog(null, "Error de Datos");
        }
        ListarProveedor();
        LimpiarProveedor();
        
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void txtNumDocKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumDocKeyTyped
        // TODO add your handling code here:
        if (txtNumDoc.getText().length()== 12) 
            evt.consume(); 
    }//GEN-LAST:event_txtNumDocKeyTyped

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        ClsEProveedor objEP=new ClsEProveedor();
        ClsNProveedor objNP=new ClsNProveedor();
        
        //GUARDAR HISTORIAL - MODIFICAR
        ClsNHistorial objNH=new ClsNHistorial();
        ClsEHistorial objEH = new ClsEHistorial();
        Date date = new Date();
        DateFormat FechaHora = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        String accion="";
        
        //Recorremos los resultados del método Listar.
        for(ClsEProveedor objE:objNP.MtdListarProveedor()){
            //If para buscar el ID de la fila a modificar.
            if(txtNumDoc.getText().equals(String.valueOf(objE.getNro_documento()))){
                //If para buscar diferencias en los atributos.
                if(txtDireccion.getText().equals(objE.getDireccion())){
                    
                }
                else{
                    //Insersión en la tabla Historial.
                    objEH.setFecha(FechaHora.format(date)+"");
                    objEH.setTipo("Modificar Proveedor");
                    objEH.setAccion(lblNombres.getText()+" "+lblApellidos.getText()+ " modifico el Proveedor:"+objE.getNro_documento()+" - Direccion: "+objE.getDireccion()+" a "+txtDireccion.getText());
                    objEH.setNro_doc(lblDni.getText());
                    if(objNH.MtdRegistrarHistorial(objEH)==true){
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Error al registrar accion.");
                    }
                }
               
                
                //=============
                if(txtCelular.getText().equals(objE.getCelular())){
                    
                }
                else{
                    //Insersión en la tabla Historial.
                    objEH.setFecha(FechaHora.format(date)+"");
                    objEH.setTipo("Modificar Proveedor");
                    objEH.setAccion(lblNombres.getText()+" "+lblApellidos.getText()+ " modifico el Proveedor:"+objE.getNro_documento()+" - Celular: "+objE.getCelular()+" a "+txtCelular.getText());
                    objEH.setNro_doc(lblDni.getText());
                    if(objNH.MtdRegistrarHistorial(objEH)==true){
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Error al registrar accion.");
                    }
                }
                //=============
                String estado1=String.valueOf(cboEstado.getSelectedItem());
                int est=0;
                    if(estado1.equals("Activo")){
                        est=1;
                        }
                    if(estado1.equals("Inactivo")){
                        est=0;
                    }
                String estadoanterior="";
                if(est==1){
                    estadoanterior="Inactivo";
                }else{
                    estadoanterior="Activo";
                }
                 
                if(est==(objE.getEstado())){
                    
                }
                else{
                    //Insersión en la tabla Historial.
                    objEH.setFecha(FechaHora.format(date)+"");
                    objEH.setTipo("Modificar Proveedor");
                    objEH.setAccion(lblNombres.getText()+" "+lblApellidos.getText()+ " modifico el Proveedor:"+objE.getNro_documento()+" - Estado: "+estadoanterior+" a "+cboEstado.getSelectedItem());
                    objEH.setNro_doc(lblDni.getText());
                    if(objNH.MtdRegistrarHistorial(objEH)==true){
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Error al registrar accion.");
                    }
                }
                //=============
                
                
                
                
                
            }
            
            
        }
        
        //FIN GUARDAR HISTORIAL - MODIFICAR
          
        objEP.setNro_documento(txtNumDoc.getText());
        objEP.setRazon_social(txtRazonSocial.getText());
        objEP.setDireccion(txtDireccion.getText());   
        objEP.setCelular(txtCelular.getText());
        
        String idTipo=String.valueOf(txtTipoDoc.getText());
        ClsNTipo_documento objND=new ClsNTipo_documento();
        for(ClsETipo_documento objE:objND.MtdListarTipo_documento()){
            if(idTipo.equals(objE.getDescripcion()))
            {
                objEP.setIdTipo_documento(objE.getIdTipo_documento());
                break;
            }
        }
        String estado=String.valueOf(cboEstado.getSelectedItem());
        if(estado.equals("Activo")){
            objEP.setEstado(1);
        }
        if(estado.equals("Inactivo")){
            objEP.setEstado(0);
        }
        
        if(objNP.MtdModificarProveedor(objEP)==true){
            JOptionPane.showMessageDialog(null, "Datos modificados correctamente.");
        }
        else{
            JOptionPane.showMessageDialog(null, "Error de Datos");
        }
        ListarProveedor();
        LimpiarProveedor();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void txtTipoDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTipoDocActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTipoDocActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        String token = "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJlbWFpbCI6ImFuY29icmlhbjZAZ21haWwuY29tIn0.PTLq2kMGMK3A5XTbdmRAUMDLRn3f5eS2eMF1TV0CtLM";
        String ruc=txtNumDoc.getText();
        String enlace="https://dniruc.apisperu.com/api/v1/ruc/" + ruc + "?token=" + token;
        try {
            URL url=new URL(enlace);
            URLConnection request=url.openConnection();
            request.connect();
            
            JsonParser jp= new JsonParser();
            JsonElement root = jp.parse(new InputStreamReader((InputStream)request.getContent()));
            if(root.isJsonObject()){
                JsonObject rootobj = root.getAsJsonObject();
        
                String razonSoc=rootobj.get("razonSocial").getAsString();
                //String direc=rootobj.get("direccion").getAsString();
                
                txtRazonSocial.setText(razonSoc);
                //txtDireccion.setText(direc);
            }            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,e.getMessage());
        }
    }//GEN-LAST:event_btnBuscarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private RSMaterialComponent.RSButtonMaterialIconOne btnBuscar;
    private RSMaterialComponent.RSButtonMaterialIconOne btnEditar;
    private RSMaterialComponent.RSButtonMaterialIconOne btnEditarMarca;
    private RSMaterialComponent.RSButtonMaterialIconOne btnEliminarMarca;
    private RSMaterialComponent.RSButtonMaterialIconOne btnGuardar;
    private RSMaterialComponent.RSButtonMaterialIconOne btnGuardarMarca;
    private RSMaterialComponent.RSButtonMaterialIconOne btnLimpiar;
    private javax.swing.JComboBox<String> cboEstado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JLabel lblIdMarca;
    private necesario.RSPanel rSPanel1;
    private static javax.swing.JTable tblMarcas;
    private javax.swing.JTable tblProveedores;
    private javax.swing.JTextField txtCelular;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtMarca;
    private javax.swing.JTextField txtNumDoc;
    private javax.swing.JTextField txtRazonSocial;
    private javax.swing.JTextField txtTipoDoc;
    // End of variables declaration//GEN-END:variables

    private void LimpiarProveedor() {
        txtNumDoc.setText("");
        txtRazonSocial.setText("");
        txtDireccion.setText("");
        txtCelular.setText("");
        txtNumDoc.setEditable(true);
    }

    private void ListarProveedor() {
        DefaultTableModel modelo = (DefaultTableModel) tblProveedores.getModel();
        try {
            int filas=tblProveedores.getRowCount();
            for (int i = 0;filas>i; i++) {
                modelo.removeRow(0);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al limpiar la tabla.");
        }
        ClsNProveedor objNP=new ClsNProveedor();
        String[] datos=new String[10];
        for(ClsEProveedor objEP:objNP.MtdListarProveedor()){
            datos[0]=objEP.getNro_documento();
            int idTipo=objEP.getIdTipo_documento();
            ClsNTipo_documento objND=new ClsNTipo_documento();
            for(ClsETipo_documento objE:objND.MtdListarTipo_documento()){
                if(idTipo==objE.getIdTipo_documento())
                {
                    datos[1]=objE.getDescripcion();
                    break;
                }
            }
            datos[2]=objEP.getRazon_social();
            if(String.valueOf(objEP.getEstado()).equals("1")){
                datos[3]="Activo";                
            }
            if(String.valueOf(objEP.getEstado()).equals("0")){
                datos[3]="Inactivo";                
            }  
            modelo.addRow(datos);
        }
        TableRowSorter<TableModel> Id = new TableRowSorter<TableModel>(modelo);
        tblProveedores.setRowSorter(Id);
        tblProveedores.getRowSorter().toggleSortOrder(2);
    }

    private void LimpiarMarca() {
        txtMarca.setText("");
    }

    private void ListarMarca() {
        DefaultTableModel modelo = (DefaultTableModel) tblMarcas.getModel();
        try {
            int filas=tblMarcas.getRowCount();
            for (int i = 0;filas>i; i++) {
                modelo.removeRow(0);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al limpiar la tabla.");
        }
        ClsNMarca objNM=new ClsNMarca();
        String[] datos=new String[10];
        for(ClsEMarca objEM:objNM.MtdListarMarca()){
            datos[0]=String.valueOf(objEM.getIdMarca());
            datos[1]=objEM.getDescripcion();
            modelo.addRow(datos);
        }
        TableRowSorter<TableModel> Id = new TableRowSorter<TableModel>(modelo);
        tblMarcas.setRowSorter(Id);
        tblMarcas.getRowSorter().toggleSortOrder(0);
        txtMarca.setText("");
    }
}
